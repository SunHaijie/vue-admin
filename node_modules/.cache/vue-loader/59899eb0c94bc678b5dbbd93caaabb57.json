{"remainingRequest":"/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Jeff/Documents/workspace-vs/vue-admin/src/views/User/index.vue?vue&type=style&index=0&id=bc0b5f70&lang=scss&scoped=true&","dependencies":[{"path":"/Users/Jeff/Documents/workspace-vs/vue-admin/src/views/User/index.vue","mtime":1614524927105},{"path":"/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/css-loader/dist/cjs.js","mtime":1613959812332},{"path":"/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1613959818681},{"path":"/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/postcss-loader/src/index.js","mtime":1613959815802},{"path":"/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/sass-loader/dist/cjs.js","mtime":1613959817599},{"path":"/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1613959811244},{"path":"/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/vue-loader/lib/index.js","mtime":1613959818680}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4uLy4uL3N0eWxlcy9jb25maWcuc2NzcyI7Ci5sYWJlbC13cmFwIHsKICAgIEBpbmNsdWRlIGxhYmVsRG9tKGxlZnQsIDYwLCA0MCk7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4NA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/User","sourcesContent":["<template>\n    <div>\n        <el-row>\n            <el-col :span=\"20\">\n                <div class=\"label-wrap\">\n                    <label>关键字：</label>\n                    <div class=\"warp-content\">\n                        <el-row :gutter=\"16\">\n                            <el-col :span=\"3\">\n                                <SelectVue :config=\"data.configOption\" :selectData.sync=\"data.selectData\" />\n                            </el-col>\n                            <el-col :span=\"5\">\n                                <el-input v-model=\"data.key_word\" placeholder=\"请输入搜索的关键字\"></el-input>\n                            </el-col>\n                            <el-col :span=\"15\">\n                                <el-button type=\"danger\" @click=\"search\">搜索</el-button>\n                            </el-col>\n                        </el-row>\n                    </div>\n                </div>\n            </el-col>\n            <el-col :span=\"4\">\n                <el-button type=\"danger\" class=\"pull-right\" @click=\"handlerAdd\">添加用户</el-button>\n            </el-col>\n        </el-row>\n        <div class=\"black-space-30\"></div>\n        <TableVue ref=\"userTable\" :config=\"data.configTable\" :tableRow.sync=\"data.tableRow\">\n            <!--插槽-->\n            <template v-slot:status=\"slotData\">\n                <el-switch @change=\"handlerSwitch(slotData.data)\" v-model=\"slotData.data.status\" active-value=\"2\"  inactive-value=\"1\" active-color=\"#13ce66\" inactive-color=\"#ff4949\"></el-switch>\n            </template>\n            <template v-slot:operation=\"slotData\">\n                <el-button size=\"small\" type=\"danger\" @click=\"handlerDel(slotData.data)\">删除</el-button>\n                <el-button size=\"small\" type=\"success\" @click=\"handlerEdit(slotData.data)\">编辑</el-button>\n            </template>\n            <template v-slot:tableFooterLeft>\n                <el-button size=\"small\" @click=\"handlerBatchDel()\">批量删除</el-button>\n            </template>\n            <!--插槽-->\n        </TableVue>\n        <!--子组件-->\n        <DialogAdd :flag.sync=\"data.dialog_add\" :editData=\"data.editData\" @refreshTabelData=\"refreshData\" />\n    </div>\n</template>\n<script>\nimport { reactive, ref, watch, onMounted, provide } from '@vue/composition-api';\nimport { UserDel, UserActives } from \"@/api/user\";\n// 组件\nimport SelectVue from \"@c/Select\";\nimport TableVue from \"@c/Table\";\nimport DialogAdd from \"./dialog/add\";\n// 3.0抽离的方法\nimport { global } from \"@/utils/global_V3.0\";\nexport default {\n    name: 'userIndex',\n    components: { SelectVue, TableVue, DialogAdd },\n    setup(props, { root, refs }) {\n        const { confirm } = global();\n        const userTable = ref(null);\n        const data = reactive({\n            // table选择的数据\n            tableRow: {},\n            cityPickerData: {},\n            dialog_add: false,\n            dialog_edit: false,\n            editData: {},\n            configOption: {\n                init: [\"truename\", \"phone\"]\n            },\n            // 下接菜单的数据\n            selectData: {},\n            // 搜索关键字\n            key_word: \"\",\n            // 阻止状态\n            updateUserStatusFlag: false,\n            // table组件配置参数\n            configTable: {\n                // 表头\n                tHead: [\n                    { \n                        label: \"邮箱/用户名\",\n                        field: \"username\",\n                        width: 200\n                    },\n                    { \n                        label: \"真实姓名\",\n                        field: \"truename\",\n                        width: 120\n                    },\n                    { \n                        label: \"手机号\",\n                        field: \"phone\"\n                    },\n                    { \n                        label: \"地区\",\n                        field: \"region\"\n                    },\n                    { \n                        label: \"角色\",\n                        field: \"role\"\n                    },\n                    { \n                        label: \"禁启用状态\",\n                        field: \"status\",\n                        columnType: \"slot\",\n                        slotName: \"status\"\n                    },\n                    { \n                        label: \"操作\",\n                        columnType: \"slot\",\n                        slotName: \"operation\"\n                    }\n                ],\n                // 请求接口URL\n                requestData: {\n                    url: \"getUserList\",\n                    data: {\n                        pageNumber: 1,\n                        pageSize: 10\n                    }\n                }\n            }\n        });\n\n        const search = () => {\n            console.log(data.selectData.value)\n            let requesttData = {\n                [data.selectData.value] : data.key_word\n            }\n            refs.userTable.paramsLoadData(requesttData);\n        }\n\n        const handlerBatchDel = () => {\n            let userId = data.tableRow.idItem\n            if(!userId || userId.length === 0) {\n                root.$message({\n                    message: \"请勾选需要删除的用户！！\",\n                    type: \"error\"\n                })\n                return false;\n            }\n            confirm({\n                content: \"确认删除当前信息，确认后将无法恢复！！\",\n                tip: \"警告\",\n                fn: userDelete\n            })\n            \n        }\n        // 删除用户\n        const userDelete = () => {\n            UserDel({ id: data.tableRow.idItem }).then(response => {\n                // 其中一种写法\n                // refs.userTable.refreshData()\n                // 第二种写法\n                refreshData()\n            })\n        }\n\n        const refreshData = () => {\n            userTable.value.refreshData()\n        }\n\n        /**\n         * methods\n         */\n        const handlerDel = (params) => {\n            data.tableRow.idItem = [params.id]\n            confirm({\n                content: \"确认删除当前信息，确认后将无法恢复！！\",\n                tip: \"警告\",\n                fn: userDelete\n            })\n        }\n\n        /**\n         * 添加用户\n         */\n        const handlerAdd = () => {\n            data.dialog_add = true;\n            // 子组件赋值\n            data.editData = Object.assign({});\n        }\n\n        /**\n         * 编辑\n         */\n        const handlerEdit = (params) => {\n            data.dialog_add = true;\n            // 子组件赋值\n            data.editData = Object.assign({}, params);\n        }\n\n        /**\n         * 修改用户状态\n         */\n        const handlerSwitch = (params) => {\n            if(data.updateUserStatusFlag) { return false }\n            data.updateUserStatusFlag = true\n            UserActives({ id: params.id, status: params.status }).then(response => {\n                root.$message({\n                    message: response.data.message,\n                    type: \"success\"\n                })\n                data.updateUserStatusFlag = !data.updateUserStatusFlag\n            }).catch(error => {\n                data.updateUserStatusFlag = !data.updateUserStatusFlag\n            })\n        }\n\n        onMounted(() => {})\n\n        return {\n            data,\n            handlerDel,\n            handlerBatchDel, userTable, refreshData, handlerSwitch, handlerEdit, handlerAdd, search\n        }\n    }\n}\n</script>\n<style lang=\"scss\" scoped>\n@import \"../../styles/config.scss\";\n.label-wrap {\n    @include labelDom(left, 60, 40);\n}\n</style>"]}]}