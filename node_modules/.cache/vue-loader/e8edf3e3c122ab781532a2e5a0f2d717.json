{"remainingRequest":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Jeff/Documents/workspace/vue-admin/src/views/Login/index.vue?vue&type=style&index=1&id=aeba673c&lang=scss&scoped=true&","dependencies":[{"path":"/Users/Jeff/Documents/workspace/vue-admin/src/views/Login/index.vue","mtime":1614128769615},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/css-loader/dist/cjs.js","mtime":1613959812332},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1613959818681},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/postcss-loader/src/index.js","mtime":1613959815802},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/sass-loader/dist/cjs.js","mtime":1613959817599},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1613959811244},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/vue-loader/lib/index.js","mtime":1613959818680}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNsb2dpbnsKICAgIGhlaWdodDogMTAwdmg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQ0YTVmOwp9Ci5sb2dpbi13cmFwIHsKICAgIHdpZHRoOiAzMzBweDsKICAgIG1hcmdpbjogYXV0bzsKfQoubWVudS10YWIgewogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgbGkgewogICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgICB3aWR0aDogODhweDsKICAgICAgICBsaW5lLWhlaWdodDogMzZweDsKICAgICAgICBmb250LXNpemU6IDE0cHg7CiAgICAgICAgY29sb3I6ICNmZmY7CiAgICAgICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIH0KICAgIC5jdXJyZW50IHsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLC4xKTsKICAgIH0KICAgIC5sb2dpbi1mb3JtIHsKICAgICAgICBtYXJnaW4tdG9wOiAyOXB4OwogICAgICAgIGxhYmVsIHsKICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7CiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDNweDsKICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4OwogICAgICAgICAgICBjb2xvcjogI2ZmZjsKICAgICAgICB9CiAgICAgICAgLml0ZW0tZm9ybSB7CiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEzcHg7CiAgICAgICAgfQogICAgICAgIC5sb2dpbi1idG4gewogICAgICAgICAgbWFyZ2luLXRvcDogMTlweDsKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Login","sourcesContent":["<template>\n    <div id=\"login\">\n        <div class=\"login-wrap\">\n            <ul class=\"menu-tab\"> \n                <li v-for=\"item in menuTab\" :key=\"item.id\" :class=\"{'current': item.current}\" @click=\"toggleMenu(item)\">{{ item.txt }}</li>\n            </ul>\n            <!--表单 start -->\n            <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" class=\"login-form\" size=\"medium\">\n                \n                <el-form-item prop=\"username\" class=\"item-form\">\n                    <label>邮箱</label>\n                    <el-input type=\"text\" v-model=\"ruleForm.username\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n\n                <el-form-item prop=\"password\" class=\"item-form\">\n                    <label>密码</label>\n                    <el-input type=\"password\" v-model=\"ruleForm.password\" autocomplete=\"off\" minlength=\"6\" maxlength=\"20\"></el-input>\n                </el-form-item>\n\n                <el-form-item prop=\"passwords\" class=\"item-form\" v-show=\"model ==='register'\">\n                    <label>重复密码</label>\n                    <el-input type=\"password\" v-model=\"ruleForm.passwords\" autocomplete=\"off\" minlength=\"6\" maxlength=\"20\"></el-input>\n                </el-form-item>\n\n                <el-form-item prop=\"code\" class=\"item-form\">\n                    <label>验证码</label>\n                    <el-row :gutter=\"11\">\n                        <el-col :span=\"15\">\n                            <el-input v-model.number=\"ruleForm.code\" minlength=\"6\" maxlength=\"6\"></el-input>\n                        </el-col>\n                        <el-col :span=\"9\">\n                            <el-button type=\"success\" class=\"block\">获取验证码</el-button>\n                        </el-col>\n                    </el-row>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"danger\" @click=\"submitForm('ruleForm')\" class=\"block login-btn\">提交</el-button>\n                </el-form-item>\n            </el-form>\n        </div>\n    </div>\n</template>\n<script>\nimport { stripscript,validateEmail,validatePass,validateCode } from '@/utils/validate.js';\nexport default {\n    name: 'login',\n    data(){\n        //验证用户名\n        var validateUsername = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入用户名'));\n            } else if(validateEmail(value)){\n                callback(new Error('用户名格式有误'));\n            } else {\n                callback(); //true\n            }\n        };\n        //验证密码\n        var validatePassword = (rule, value, callback) => {\n            //过滤后的数据\n            this.ruleForm.password = stripscript(value);\n            value = this.ruleForm.password;\n            if (value === '') {\n                callback(new Error('请输入密码'));\n            } else if (validatePass(value)) {\n                callback(new Error('密码为6至20位的数字+字母'));\n            } else {\n                callback();\n            }\n        };\n        //验证重复密码\n        var validatePasswords = (rule, value, callback) => {\n            //如果模块值为login，直接通过，无需验证重复密码。\n            if(this.model === 'login'){\n                callback();\n            }\n            //过滤后的数据\n            this.ruleForm.passwords = stripscript(value);\n            value = this.ruleForm.passwords;\n            if (value === '') {\n                callback(new Error('请再次输入密码'));\n            } else if (value != this.ruleForm.password) {\n                callback(new Error('重复密码不正确'));\n            } else {\n                callback();\n            }\n        };\n        //验证验证码\n        var checkCode = (rule, value, callback) => {\n            if (value === '') {\n                return callback(new Error('请输入验证码'));\n            } else if (validateCode(value)){\n                return callback(new Error('验证码格式有误'));\n            } else {\n                callback();\n            }\n        };\n        return {\n            menuTab: [\n            { txt: '登录', current: true,type: 'login' },\n            { txt: '注册', current: false,type: 'register' }\n          ],\n          //模块值\n          model: 'login',\n          //表单的数据\n          ruleForm: {\n          username: '',\n          passeord: '',\n          passwords: '',\n          code: ''\n        },\n        rules: {\n          username: [\n            { validator: validateUsername, trigger: 'blur' }\n          ],\n          password: [\n            { validator: validatePassword, trigger: 'blur' }\n          ],\n          passwords: [\n            { validator: validatePasswords, trigger: 'blur' }\n          ],\n          code: [\n            { validator: checkCode, trigger: 'blur' }\n          ]\n        }\n        }\n    },\n    created(){},\n    mounted(){},\n    methods:{\n        toggleMenu(data){\n            this.menuTab.forEach((elem,index) => {\n                elem.current = false\n            });\n            //高光\n            data.current = true;\n            //修改模块值\n            this.model = data.type;\n        },\n        submitForm(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    alert('submit!');\n                } else {\n                    console.log('error submit!!');\n                    return false;\n                }\n            });\n        }\n    } \n}\n</script>\n<style>\n.login-wrap .login-form .block {\n    display: block;\n    width: 100%;\n}\n\n</style>\n<style lang=\"scss\" scoped>\n#login{\n    height: 100vh;\n    background-color: #344a5f;\n}\n.login-wrap {\n    width: 330px;\n    margin: auto;\n}\n.menu-tab {\n    text-align: center;\n    li {\n        display: inline-block;\n        width: 88px;\n        line-height: 36px;\n        font-size: 14px;\n        color: #fff;\n        border-radius: 2px;\n        cursor: pointer;\n    }\n    .current {\n        background-color: rgba(0,0,0,.1);\n    }\n    .login-form {\n        margin-top: 29px;\n        label {\n            display: block;\n            margin-bottom: 3px;\n            font-size: 14px;\n            color: #fff;\n        }\n        .item-form {\n            margin-bottom: 13px;\n        }\n        .login-btn {\n          margin-top: 19px;\n        }\n    }\n}\n</style>"]}]}