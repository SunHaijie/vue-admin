{"remainingRequest":"/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Jeff/Documents/workspace-vs/vue-admin/src/components/UploadImg/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Jeff/Documents/workspace-vs/vue-admin/src/components/UploadImg/index.vue","mtime":1614585461242},{"path":"/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1613959811244},{"path":"/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/babel-loader/lib/index.js","mtime":1613959810487},{"path":"/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1613959811244},{"path":"/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/vue-loader/lib/index.js","mtime":1613959818680}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHJlYWN0aXZlLCByZWYsIHdhdGNoLCBvbk1vdW50ZWQgfSBmcm9tICdAdnVlL2NvbXBvc2l0aW9uLWFwaSc7CmltcG9ydCB7IFFpbml1VG9LZW4gfSBmcm9tICJAL2FwaS9jb21tb24iOwpleHBvcnQgZGVmYXVsdCB7CiAgICAvKioKICAgICAqIDHjgIHnu4Tku7bnmoTov4fnqIvopoHlgZrkupvku4DkuYjkuovvvJ/vvIjkuIPniZvkupHnmoR0b2tlbu+8jOaYvuekuum7mOiupOWbvueJh+OAgemAieaLqeWbvueJh+WQjua4suafk+iHqui6q+WbvueJh++8iQogICAgICogMuOAgeacgOe7iOe7k+aenOimgeWBmuS7gOS5iO+8n++8iOi/lOWbnumAieaLqeWQjueahOWbvueJh+i3r+W+hO+8iQogICAgICovCiAgICBuYW1lOiAidXBsb2FkSW1nIiwKICAgIHByb3BzOiB7CiAgICAgICAgaW1nVXJsOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogIiIKICAgICAgICB9LAogICAgICAgIGNvbmZpZzogewogICAgICAgICAgICB0eXBlOiBPYmplY3QsCiAgICAgICAgICAgIGRlZmF1bHQ6ICgpID0+IHt9CiAgICAgICAgfQogICAgfSwKICAgIHNldHVwKHByb3BzLCB7IHJvb3QsIGVtaXQgfSl7CiAgICAgICAgY29uc3QgZGF0YSA9IHJlYWN0aXZlKHsKICAgICAgICAgICAgaW1hZ2U6ICIiLAogICAgICAgICAgICB1cGxvYWRLZXk6IHsKICAgICAgICAgICAgICAgIHRva2VuOiAiIiwKICAgICAgICAgICAgICAgIGtleTogIiIKICAgICAgICAgICAgfQogICAgICAgIH0pOwoKICAgICAgICBjb25zdCBoYW5kbGVBdmF0YXJTdWNjZXNzID0gKHJlcywgZmlsZSkgPT4gewogICAgICAgICAgICBsZXQgaW1hZ2UgPSBgJHtyb290LiRzdG9yZS5nZXR0ZXJzWyJjb21tb24vcWluaXVVcmwiXX0ke3Jlcy5rZXl9YDsKICAgICAgICAgICAgZGF0YS5pbWFnZSA9IGltYWdlOwogICAgICAgICAgICBlbWl0KCJ1cGRhdGU6aW1nVXJsIiwgaW1hZ2UpOwogICAgICAgIH0KICAgICAgICAKICAgICAgICBjb25zdCBiZWZvcmVBdmF0YXJVcGxvYWQgPSAoZmlsZSkgPT4gewogICAgICAgICAgICBjb25zdCBpc0pQRyA9IGZpbGUudHlwZSA9PT0gJ2ltYWdlL2pwZWcnOwogICAgICAgICAgICBjb25zdCBpc0x0Mk0gPSBmaWxlLnNpemUgLyAxMDI0IC8gMTAyNCA8IDI7CiAgICAgICAgICAgIGlmICghaXNKUEcpIHsKICAgICAgICAgICAgICAgIHJvb3QuJG1lc3NhZ2UuZXJyb3IoJ+S4iuS8oOWktOWDj+WbvueJh+WPquiDveaYryBKUEcg5qC85byPIScpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICghaXNMdDJNKSB7CiAgICAgICAgICAgICAgICByb290LiRtZXNzYWdlLmVycm9yKCfkuIrkvKDlpLTlg4/lm77niYflpKflsI/kuI3og73otoXov4cgMk1CIScpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIOaWh+S7tuWQjei9rOeggQogICAgICAgICAgICBsZXTCoHN1ZmZpeMKgPcKgZmlsZS5uYW1lOwogICAgICAgICAgICBsZXTCoGtlecKgPcKgZW5jb2RlVVJJKGAke3N1ZmZpeH1gKTsKICAgICAgICAgICAgZGF0YS51cGxvYWRLZXkua2V5ID0ga2V5OwogICAgICAgICAgICByZXR1cm4gaXNKUEcgJiYgaXNMdDJNOwogICAgICAgIH0KCiAgICAgICAgLyoqCiAgICAgICAgICog6I635Y+W5LiD54mb5LqRdG9rZW4KICAgICAgICAgKi8KICAgICAgICBjb25zdCBnZXRRaW5pdVRvS2VuID0gKCkgPT4gewogICAgICAgICAgICBsZXQgcmVxdWVzdERhdGEgPSB7CiAgICAgICAgICAgICAgICAiYWNjZXNza2V5IjogcHJvcHMuY29uZmlnLmFjY2Vzc2tleSwKICAgICAgICAgICAgICAgICJzZWNyZXRrZXkiOiBwcm9wcy5jb25maWcuc2VjcmV0a2V5LAogICAgICAgICAgICAgICAgImJ1Y2tldHkiOiBwcm9wcy5jb25maWcuYnVja2V0eQogICAgICAgICAgICB9CiAgICAgICAgICAgIFFpbml1VG9LZW4ocmVxdWVzdERhdGEpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgZGF0YS51cGxvYWRLZXkudG9rZW4gPSByZXNwb25zZS5kYXRhLmRhdGEudG9rZW4KICAgICAgICAgICAgfSkKICAgICAgICB9CgogICAgICAgIC8qKgogICAgICAgICAqIOebkeWQrAogICAgICAgICAqLwogICAgICAgIHdhdGNoKCgpID0+IHByb3BzLmltZ1VybCwgKHZhbHVlKSA9PiB7CiAgICAgICAgICAgIGRhdGEuaW1hZ2UgPSB2YWx1ZQogICAgICAgIH0pCgogICAgICAgIG9uTW91bnRlZCgoKSA9PiB7CiAgICAgICAgICAgIGdldFFpbml1VG9LZW4oKQogICAgICAgIH0pCgogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGRhdGEsIGhhbmRsZUF2YXRhclN1Y2Nlc3MsIGJlZm9yZUF2YXRhclVwbG9hZAogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/UploadImg","sourcesContent":["<template>\n    <el-upload\n        class=\"avatar-uploader\"\n        :action=\"config.action\"\n        :data=\"data.uploadKey\"\n        :show-file-list=\"false\"\n        :on-success=\"handleAvatarSuccess\"\n        :before-upload=\"beforeAvatarUpload\">\n        <img v-if=\"data.image\" :src=\"data.image\" class=\"avatar\">\n        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n    </el-upload>\n</template>\n<script>\nimport { reactive, ref, watch, onMounted } from '@vue/composition-api';\nimport { QiniuToKen } from \"@/api/common\";\nexport default {\n    /**\n     * 1、组件的过程要做些什么事？（七牛云的token，显示默认图片、选择图片后渲染自身图片）\n     * 2、最终结果要做什么？（返回选择后的图片路径）\n     */\n    name: \"uploadImg\",\n    props: {\n        imgUrl: {\n            type: String,\n            default: \"\"\n        },\n        config: {\n            type: Object,\n            default: () => {}\n        }\n    },\n    setup(props, { root, emit }){\n        const data = reactive({\n            image: \"\",\n            uploadKey: {\n                token: \"\",\n                key: \"\"\n            }\n        });\n\n        const handleAvatarSuccess = (res, file) => {\n            let image = `${root.$store.getters[\"common/qiniuUrl\"]}${res.key}`;\n            data.image = image;\n            emit(\"update:imgUrl\", image);\n        }\n        \n        const beforeAvatarUpload = (file) => {\n            const isJPG = file.type === 'image/jpeg';\n            const isLt2M = file.size / 1024 / 1024 < 2;\n            if (!isJPG) {\n                root.$message.error('上传头像图片只能是 JPG 格式!');\n            }\n            if (!isLt2M) {\n                root.$message.error('上传头像图片大小不能超过 2MB!');\n            }\n            // 文件名转码\n            let suffix = file.name;\n            let key = encodeURI(`${suffix}`);\n            data.uploadKey.key = key;\n            return isJPG && isLt2M;\n        }\n\n        /**\n         * 获取七牛云token\n         */\n        const getQiniuToKen = () => {\n            let requestData = {\n                \"accesskey\": props.config.accesskey,\n                \"secretkey\": props.config.secretkey,\n                \"buckety\": props.config.buckety\n            }\n            QiniuToKen(requestData).then(response => {\n                data.uploadKey.token = response.data.data.token\n            })\n        }\n\n        /**\n         * 监听\n         */\n        watch(() => props.imgUrl, (value) => {\n            data.image = value\n        })\n\n        onMounted(() => {\n            getQiniuToKen()\n        })\n\n        return {\n            data, handleAvatarSuccess, beforeAvatarUpload\n        }\n    }\n}\n</script>\n<style lang=\"scss\" scoped>\n\n</style>"]}]}