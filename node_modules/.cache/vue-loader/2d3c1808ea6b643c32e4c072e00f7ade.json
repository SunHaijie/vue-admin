{"remainingRequest":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Jeff/Documents/workspace/vue-admin/src/views/Info/category.vue?vue&type=style&index=0&id=1555adf5&lang=scss&scoped=true&","dependencies":[{"path":"/Users/Jeff/Documents/workspace/vue-admin/src/views/Info/category.vue","mtime":1614759277704},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/css-loader/dist/cjs.js","mtime":1613959812332},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1613959818681},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/postcss-loader/src/index.js","mtime":1613959815802},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/sass-loader/dist/cjs.js","mtime":1613959817599},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1613959811244},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/vue-loader/lib/index.js","mtime":1613959818680}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4uLy4uL3N0eWxlcy9jb25maWcuc2NzcyI7Ci5jYXRlZ29yeS13cmFwIHsKICAgIGRpdjpmaXJzdC1jaGlsZCB7CiAgICAgICAgJjpiZWZvcmUgeyB0b3A6IDIwcHg7IH0KICAgIH0KICAgIGRpdjpsYXN0LWNoaWxkIHsKICAgICAgICAmOmJlZm9yZSB7IGJvdHRvbTogMjFweDsgfQogICAgfQp9Ci5tZW51LXRpdGxlIHsKICAgIGxpbmUtaGVpZ2h0OiA0NHB4OwogICAgcGFkZGluZy1sZWZ0OiAyMnB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogI2YzZjNmMzsKfQouY2F0ZWdvcnkgewogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgbGluZS1oZWlnaHQ6IDQ0cHg7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAmOmJlZm9yZSB7CiAgICAgICAgY29udGVudDogJyc7CiAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgIGxlZnQ6IDIycHg7CiAgICAgICAgdG9wOiAwOwogICAgICAgIGJvdHRvbTogMDsKICAgICAgICB3aWR0aDogMzJweDsKICAgICAgICBib3JkZXItbGVmdDogMXB4IGRvdHRlZCAjMDAwOwogICAgfQogICAgaDQgewogICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgICAgICBwYWRkaW5nLWxlZnQ6IDQwcHg7CiAgICB9CiAgICBzdmcgewogICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICBsZWZ0OiAxNHB4OwogICAgICAgIHRvcDogMTVweDsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogICAgICAgIGZvbnQtc2l6ZTogMTdweDsKICAgIH0KICAgIGxpIHsKICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgICAgcGFkZGluZy1sZWZ0OiAzNnB4OwogICAgICAgIG1hcmdpbi1sZWZ0OiAyNHB4OwogICAgICAgICY6YmVmb3JlIHsKICAgICAgICAgICAgY29udGVudDogJyc7CiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICAgICAgbGVmdDogMDsKICAgICAgICAgICAgdG9wOiAyMnB4OwogICAgICAgICAgICB3aWR0aDogMzJweDsKICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZCAjMDAwOwogICAgICAgIH0KICAgIH0KICAgIGxpLCBoNCB7CiAgICAgICAgQGluY2x1ZGUgd2Via2l0KHRyYW5zaXRpb24sIGFsbCAuNXMgZWFzZSAwcyk7CiAgICAgICAgJjpob3ZlciB7CiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmM2YzZjM7CiAgICAgICAgICAgIC5idXR0b24tZ3JvdXAgeyBkaXNwbGF5OiBibG9jazsgfQogICAgICAgIH0KICAgIH0KfQouYnV0dG9uLWdyb3VwIHsKICAgIGRpc3BsYXk6IG5vbmU7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB6LWluZGV4OiAyOwogICAgcmlnaHQ6IDExcHg7CiAgICB0b3A6IC0xcHg7CiAgICBidXR0b24geyBmb250LXNpemU6IDEycHg7IH0KfQouZnJvbS13cmFwIHsKICAgIHdpZHRoOiA0MTBweDsKICAgIHBhZGRpbmctdG9wOiAyNnB4Owp9Ci5oci1lOWU5ZTkgewogICAgd2lkdGg6IGNhbGMoMTAwJSArIDYwcHgpOwogICAgbWFyZ2luLWxlZnQ6IC0zMHB4OwogICAgYm9yZGVyOiBub25lOwogICAgbWFyZ2luLXRvcDogMzBweDsKICAgIG1hcmdpbi1ib3R0b206IDMwcHg7CiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U5ZTllOTsKfQo="},{"version":3,"sources":["category.vue"],"names":[],"mappingsfile":"category.vue","sourceRoot":"src/views/Info","sourcesContent":["<template>\n    <div id=\"category\">\n        <el-button type=\"danger\" @click=\"addFirst({type: 'category_first_add'})\">添加一级分类</el-button>\n        <hr class=\"hr-e9e9e9\" />\n        <div>\n            <el-row :gutter=\"30\">\n                <el-col :span=\"8\">\n                    <div class=\"category-wrap\">\n                        <div class=\"category\" v-for=\"firstItem in category.item\" :key=\"firstItem.id\">\n                            <!--一级分类-->\n                            <h4>\n                                <svg-icon icon-class=\"plus\"></svg-icon>\n                                {{ firstItem.category_name }}\n                                <div class=\"button-group\">\n                                    <el-button size=\"mini\" type=\"danger\" @click=\"editCategory({ data: firstItem, type: 'category_first_edit' })\" round>编辑</el-button>\n                                    <el-button size=\"mini\" type=\"success\" round @click=\"handlerAddChildren({ data: firstItem, type: 'category_children_add' })\">添加子级</el-button>\n                                    <el-button size=\"mini\" round @click=\"deleteCategoryComfirm(firstItem.id)\">删除</el-button>\n                                </div>\n                            </h4>\n                            <!--子级分类-->\n                            <ul v-if=\"firstItem.children\">\n                                <li v-for=\"childrenItem in firstItem.children\" :key=\"childrenItem.id\">\n                                    {{ childrenItem.category_name}}\n                                    <div class=\"button-group\">\n                                        <el-button size=\"mini\" type=\"danger\" round>编辑</el-button>\n                                        <el-button size=\"mini\" round>删除</el-button>\n                                    </div>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </el-col>\n                <el-col :span=\"16\">\n                    <h4 class=\"menu-title\">一级分类编辑</h4>\n                    <el-form label-width=\"142px\" class=\"from-wrap\" ref=\"categoryFrom\">\n                        <el-form-item label=\"一级分类名称：\" prop=\"categoryName\" v-if=\"category_first_input\">\n                            <el-input v-model=\"form.categoryName\" :disabled=\"category_first_disabled\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"二级分类名称：\" prop=\"secCategoryName\" v-if=\"category_children_input\">\n                            <el-input v-model=\"form.secCategoryName\" :disabled=\"category_children_disabled\"></el-input>\n                        </el-form-item>\n                        <el-form-item>\n                            <el-button type=\"danger\" @click=\"submit\" :loading=\"submit_button_loading\" :disabled=\"submit_button_disabled\">确定</el-button>\n                        </el-form-item>\n                    </el-form>\n                </el-col>\n            </el-row>\n        </div>\n    </div>\n</template>\n<script>\nimport { AddFifstCategory, GetCategory, DeleteCategory, EditCategory, AddChildrenCategory } from \"@/api/news\";\nimport { reactive, ref, onMounted, watch } from \"@vue/composition-api\";\nimport { global } from \"@/utils/global_V3.0\";\nimport { common } from \"@/api/common\";\nexport default {\n    name: 'category',\n    setup(props, { root, refs }) {\n        // global\n        const { confirm } = global();\n        const { getInfoCategory, getInfoCategoryAll, categoryItem } = common();\n        /**\n         * reactive\n         */\n        const form = reactive({\n          categoryName: '',\n          secCategoryName: ''\n        })\n        const category = reactive({\n            item: [],\n            current: []\n        })\n        // ref\n        const subit_button_type = ref('');\n        const submit_button_loading = ref(false);\n        const category_first_input = ref(true);\n        const category_children_input = ref(true);\n        const category_first_disabled = ref(true);\n        const category_children_disabled = ref(true);\n        const submit_button_disabled = ref(true);\n        const deleteId = ref('');\n\n        /**\n         * methods v2.0\n         */\n        const submit = () => {\n            if(subit_button_type.value == 'category_first_add') { addFirstCategory(); }\n            if(subit_button_type.value == 'category_first_edit') { editFirstCategory(); }\n            if(subit_button_type.value == 'category_children_add') { addChildrenCategory(); }\n            \n        }\n        const addFirstCategory = () => {\n            if(!form.categoryName) {\n                root.$message({\n                    message: \"分类名称不能为空\",\n                    type: \"error\"\n                })\n                return false;\n            }\n            // 按钮加载状态\n            submit_button_loading.value = true\n            AddFirstCategory({ categoryName: form.categoryName }).then(response => {\n                let data = response.data\n                if(data.resCode === 0) {\n                    root.$message({\n                        message: data.message,\n                        type: \"success\"\n                    });\n                    /**\n                     * 两种处理方法\n                     * 1、请求接获取分类接口（缺点：浪费资源）\n                     * 2、直接push，请求接口后返回的数据\n                     */\n                    category.item.push(response.data.data)\n                    // 数组的方法，添加数组末尾\n                }\n                submit_button_loading.value = false\n                form.categoryName = ''\n                form.secCategoryName = ''\n            }).catch(error => {\n                submit_button_loading.value = false\n                form.categoryName = ''\n                form.secCategoryName = ''\n            })\n        }\n        const addFirst = (params) => {\n            subit_button_type.value = params.type\n            category_first_input.value = true\n            category_children_input.value = false\n            category_first_disabled.value = false\n            submit_button_disabled.value = false\n            // 按alt + 左右方向键，可以返回光标上次，或下次的位置\n        }\n        const handlerAddChildren = (params) => {\n            // 更新确定按钮类型\n            subit_button_type.value = params.type\n            // 存储数据\n            category.current = params.data\n            // 禁用一级输入框\n            category_first_disabled.value = true\n            // 启用确定按钮\n            submit_button_disabled.value = false\n            // 启用子级输入框\n            category_children_disabled.value = false\n            // 显示子级输入框\n            category_children_input.value = true\n            // 显示一级分类文本\n            form.categoryName = params.data.category_name\n        }\n        const addChildrenCategory = () => {\n            if(!form.secCategoryName) {\n                root.$message({\n                    message: \"子级分类名称不能为空！！\",\n                    type: \"error\"\n                })\n                return false;\n            }\n            let requestData = {\n                categoryName: form.secCategoryName,\n                parentId: category.current.id\n            }\n            AddChildrenCategory(requestData).then(response => {\n                let responseData = response.data;\n                root.$message({\n                    message: responseData.message,\n                    type: \"success\"\n                })\n                // 调用分类列表接口\n                getInfoCategoryAll()\n                // 清空子级输入框内容\n                form.secCategoryName = \"\";\n            })\n        }\n        // 删除\n        const deleteCategoryComfirm = (categoryID) => {\n            deleteId.value = categoryID;\n            confirm({\n                content: \"确认删除当前信息，确认后将无法恢复！！\",\n                tip: \"警告\",\n                fn: deleteCategory,\n                catchFn: () => {\n                    deleteId.value = '';\n                }\n            })\n        }\n        const deleteCategory = () => {\n            DeleteCategory({ categoryId: deleteId.value }).then(response => {\n                // 操作数组 \n                /**\n                 * 两个参数的时候是删除，三个参数是替换\\插入\n                 * splice(指定起始位置, 数据的数量, 新数据)\n                 * splice(1, 2, {})\n                 * [\n                 * {id: \"132\", category_name: \"sdf df \"},\n                 * {}\n                 * ]\n                 */\n                /**\n                 * es6 findIndex\n                 * filter\n                 */\n                // let index = category.item.findIndex(item => item.id == deleteId.value);\n                // // 删除数组指定元素\n                // category.item.splice(index, 1);\n                let newData = category.item.filter(item => item.id != deleteId.value);\n                category.item = newData;\n            }).catch(error => {\n\n            })\n        }\n        // 修改\n        const editCategory = (params) => {\n            subit_button_type.value = params.type\n            category_children_input.value = false\n            category_first_disabled.value = false\n            submit_button_disabled.value = false\n            // 一级名称输入还原名称\n            form.categoryName = params.data.category_name\n            // 储存当前数据对象\n            category.current = params.data\n        }\n        const editFirstCategory = () => {\n            if(category.current.length == 0) {\n                root.$message({\n                    message: \"未选择分类！！\",\n                    type: \"error\"\n                })\n                return false\n            }\n            let requestData = {\n                id: category.current.id,\n                categoryName: form.categoryName\n            }\n            EditCategory(requestData).then(response => {\n                let responseData = response.data\n                root.$message({\n                    message: responseData.message,\n                    type: \"success\"\n                })\n                category.current.category_name = responseData.data.data.categoryName;\n                // 清空输入框\n                form.categoryName = '';\n                category.current = [];\n            })\n        }\n        /**\n         * 生命周期\n         */\n        // 挂载完成时执行，（页面DOM元素完成时，实例完成）\n        onMounted(() => {\n            getInfoCategoryAll()\n        })\n        /**\n         * watch\n         */\n        watch(() => categoryItem.item, (value) => {\n            category.item = value\n        })\n\n        return  {\n            // ref\n            category_first_input, category_children_input, submit_button_loading, category_first_disabled, category_children_disabled, submit_button_disabled,\n            // reactive\n            form, category,\n            // methods\n            submit, addFirst, deleteCategory, deleteCategoryComfirm, editCategory, handlerAddChildren, addChildrenCategory\n        }\n    }\n}\n</script>\n<style lang=\"scss\" scoped>\n@import \"../../styles/config.scss\";\n.category-wrap {\n    div:first-child {\n        &:before { top: 20px; }\n    }\n    div:last-child {\n        &:before { bottom: 21px; }\n    }\n}\n.menu-title {\n    line-height: 44px;\n    padding-left: 22px;\n    background-color: #f3f3f3;\n}\n.category {\n    position: relative;\n    line-height: 44px;\n    cursor: pointer;\n    &:before {\n        content: '';\n        position: absolute;\n        left: 22px;\n        top: 0;\n        bottom: 0;\n        width: 32px;\n        border-left: 1px dotted #000;\n    }\n    h4 {\n        position: relative;\n        padding-left: 40px;\n    }\n    svg {\n        position: absolute;\n        left: 14px;\n        top: 15px;\n        background-color: #fff;\n        font-size: 17px;\n    }\n    li {\n        position: relative;\n        padding-left: 36px;\n        margin-left: 24px;\n        &:before {\n            content: '';\n            position: absolute;\n            left: 0;\n            top: 22px;\n            width: 32px;\n            border-bottom: 1px dotted #000;\n        }\n    }\n    li, h4 {\n        @include webkit(transition, all .5s ease 0s);\n        &:hover {\n            background-color: #f3f3f3;\n            .button-group { display: block; }\n        }\n    }\n}\n.button-group {\n    display: none;\n    position: absolute;\n    z-index: 2;\n    right: 11px;\n    top: -1px;\n    button { font-size: 12px; }\n}\n.from-wrap {\n    width: 410px;\n    padding-top: 26px;\n}\n.hr-e9e9e9 {\n    width: calc(100% + 60px);\n    margin-left: -30px;\n    border: none;\n    margin-top: 30px;\n    margin-bottom: 30px;\n    border-bottom: 1px solid #e9e9e9;\n}\n</style>"]}]}