{"remainingRequest":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/babel-loader/lib/index.js!/Users/Jeff/Documents/workspace/vue-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Jeff/Documents/workspace/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Jeff/Documents/workspace/vue-admin/src/components/UploadImg/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Jeff/Documents/workspace/vue-admin/src/components/UploadImg/index.vue","mtime":1614585461242},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1613959811244},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/babel-loader/lib/index.js","mtime":1613959810487},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1613959811244},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/vue-loader/lib/index.js","mtime":1613959818680}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IHJlYWN0aXZlLCByZWYsIHdhdGNoLCBvbk1vdW50ZWQgfSBmcm9tICdAdnVlL2NvbXBvc2l0aW9uLWFwaSc7CmltcG9ydCB7IFFpbml1VG9LZW4gfSBmcm9tICJAL2FwaS9jb21tb24iOwpleHBvcnQgZGVmYXVsdCB7CiAgLyoqCiAgICogMeOAgee7hOS7tueahOi/h+eoi+imgeWBmuS6m+S7gOS5iOS6i++8n++8iOS4g+eJm+S6keeahHRva2Vu77yM5pi+56S66buY6K6k5Zu+54mH44CB6YCJ5oup5Zu+54mH5ZCO5riy5p+T6Ieq6Lqr5Zu+54mH77yJCiAgICogMuOAgeacgOe7iOe7k+aenOimgeWBmuS7gOS5iO+8n++8iOi/lOWbnumAieaLqeWQjueahOWbvueJh+i3r+W+hO+8iQogICAqLwogIG5hbWU6ICJ1cGxvYWRJbWciLAogIHByb3BzOiB7CiAgICBpbWdVcmw6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiIgogICAgfSwKICAgIGNvbmZpZzogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkge30KICAgIH0KICB9LAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcywgX3JlZikgewogICAgdmFyIHJvb3QgPSBfcmVmLnJvb3QsCiAgICAgICAgZW1pdCA9IF9yZWYuZW1pdDsKICAgIHZhciBkYXRhID0gcmVhY3RpdmUoewogICAgICBpbWFnZTogIiIsCiAgICAgIHVwbG9hZEtleTogewogICAgICAgIHRva2VuOiAiIiwKICAgICAgICBrZXk6ICIiCiAgICAgIH0KICAgIH0pOwoKICAgIHZhciBoYW5kbGVBdmF0YXJTdWNjZXNzID0gZnVuY3Rpb24gaGFuZGxlQXZhdGFyU3VjY2VzcyhyZXMsIGZpbGUpIHsKICAgICAgdmFyIGltYWdlID0gIiIuY29uY2F0KHJvb3QuJHN0b3JlLmdldHRlcnNbImNvbW1vbi9xaW5pdVVybCJdKS5jb25jYXQocmVzLmtleSk7CiAgICAgIGRhdGEuaW1hZ2UgPSBpbWFnZTsKICAgICAgZW1pdCgidXBkYXRlOmltZ1VybCIsIGltYWdlKTsKICAgIH07CgogICAgdmFyIGJlZm9yZUF2YXRhclVwbG9hZCA9IGZ1bmN0aW9uIGJlZm9yZUF2YXRhclVwbG9hZChmaWxlKSB7CiAgICAgIHZhciBpc0pQRyA9IGZpbGUudHlwZSA9PT0gJ2ltYWdlL2pwZWcnOwogICAgICB2YXIgaXNMdDJNID0gZmlsZS5zaXplIC8gMTAyNCAvIDEwMjQgPCAyOwoKICAgICAgaWYgKCFpc0pQRykgewogICAgICAgIHJvb3QuJG1lc3NhZ2UuZXJyb3IoJ+S4iuS8oOWktOWDj+WbvueJh+WPquiDveaYryBKUEcg5qC85byPIScpOwogICAgICB9CgogICAgICBpZiAoIWlzTHQyTSkgewogICAgICAgIHJvb3QuJG1lc3NhZ2UuZXJyb3IoJ+S4iuS8oOWktOWDj+WbvueJh+Wkp+Wwj+S4jeiDvei2hei/hyAyTUIhJyk7CiAgICAgIH0gLy8g5paH5Lu25ZCN6L2s56CBCgoKICAgICAgdmFyIHN1ZmZpeCA9IGZpbGUubmFtZTsKICAgICAgdmFyIGtleSA9IGVuY29kZVVSSSgiIi5jb25jYXQoc3VmZml4KSk7CiAgICAgIGRhdGEudXBsb2FkS2V5LmtleSA9IGtleTsKICAgICAgcmV0dXJuIGlzSlBHICYmIGlzTHQyTTsKICAgIH07CiAgICAvKioKICAgICAqIOiOt+WPluS4g+eJm+S6kXRva2VuCiAgICAgKi8KCgogICAgdmFyIGdldFFpbml1VG9LZW4gPSBmdW5jdGlvbiBnZXRRaW5pdVRvS2VuKCkgewogICAgICB2YXIgcmVxdWVzdERhdGEgPSB7CiAgICAgICAgImFjY2Vzc2tleSI6IHByb3BzLmNvbmZpZy5hY2Nlc3NrZXksCiAgICAgICAgInNlY3JldGtleSI6IHByb3BzLmNvbmZpZy5zZWNyZXRrZXksCiAgICAgICAgImJ1Y2tldHkiOiBwcm9wcy5jb25maWcuYnVja2V0eQogICAgICB9OwogICAgICBRaW5pdVRvS2VuKHJlcXVlc3REYXRhKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGRhdGEudXBsb2FkS2V5LnRva2VuID0gcmVzcG9uc2UuZGF0YS5kYXRhLnRva2VuOwogICAgICB9KTsKICAgIH07CiAgICAvKioKICAgICAqIOebkeWQrAogICAgICovCgoKICAgIHdhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHByb3BzLmltZ1VybDsKICAgIH0sIGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICBkYXRhLmltYWdlID0gdmFsdWU7CiAgICB9KTsKICAgIG9uTW91bnRlZChmdW5jdGlvbiAoKSB7CiAgICAgIGdldFFpbml1VG9LZW4oKTsKICAgIH0pOwogICAgcmV0dXJuIHsKICAgICAgZGF0YTogZGF0YSwKICAgICAgaGFuZGxlQXZhdGFyU3VjY2VzczogaGFuZGxlQXZhdGFyU3VjY2VzcywKICAgICAgYmVmb3JlQXZhdGFyVXBsb2FkOiBiZWZvcmVBdmF0YXJVcGxvYWQKICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAaA,SAAA,QAAA,EAAA,GAAA,EAAA,KAAA,EAAA,SAAA,QAAA,sBAAA;AACA,SAAA,UAAA,QAAA,cAAA;AACA,eAAA;AACA;AACA;AACA;AACA;AACA,EAAA,IAAA,EAAA,WALA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AALA,GANA;AAgBA,EAAA,KAhBA,iBAgBA,KAhBA,QAgBA;AAAA,QAAA,IAAA,QAAA,IAAA;AAAA,QAAA,IAAA,QAAA,IAAA;AACA,QAAA,IAAA,GAAA,QAAA,CAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,GAAA,EAAA;AAFA;AAFA,KAAA,CAAA;;AAQA,QAAA,mBAAA,GAAA,SAAA,mBAAA,CAAA,GAAA,EAAA,IAAA,EAAA;AACA,UAAA,KAAA,aAAA,IAAA,CAAA,MAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,SAAA,GAAA,CAAA,GAAA,CAAA;AACA,MAAA,IAAA,CAAA,KAAA,GAAA,KAAA;AACA,MAAA,IAAA,CAAA,eAAA,EAAA,KAAA,CAAA;AACA,KAJA;;AAMA,QAAA,kBAAA,GAAA,SAAA,kBAAA,CAAA,IAAA,EAAA;AACA,UAAA,KAAA,GAAA,IAAA,CAAA,IAAA,KAAA,YAAA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,CAAA;;AACA,UAAA,CAAA,KAAA,EAAA;AACA,QAAA,IAAA,CAAA,QAAA,CAAA,KAAA,CAAA,mBAAA;AACA;;AACA,UAAA,CAAA,MAAA,EAAA;AACA,QAAA,IAAA,CAAA,QAAA,CAAA,KAAA,CAAA,mBAAA;AACA,OARA,CASA;;;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,IAAA;AACA,UAAA,GAAA,GAAA,SAAA,WAAA,MAAA,EAAA;AACA,MAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,GAAA;AACA,aAAA,KAAA,IAAA,MAAA;AACA,KAdA;AAgBA;AACA;AACA;;;AACA,QAAA,aAAA,GAAA,SAAA,aAAA,GAAA;AACA,UAAA,WAAA,GAAA;AACA,qBAAA,KAAA,CAAA,MAAA,CAAA,SADA;AAEA,qBAAA,KAAA,CAAA,MAAA,CAAA,SAFA;AAGA,mBAAA,KAAA,CAAA,MAAA,CAAA;AAHA,OAAA;AAKA,MAAA,UAAA,CAAA,WAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,IAAA,CAAA,SAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA;AACA,OAFA;AAGA,KATA;AAWA;AACA;AACA;;;AACA,IAAA,KAAA,CAAA;AAAA,aAAA,KAAA,CAAA,MAAA;AAAA,KAAA,EAAA,UAAA,KAAA,EAAA;AACA,MAAA,IAAA,CAAA,KAAA,GAAA,KAAA;AACA,KAFA,CAAA;AAIA,IAAA,SAAA,CAAA,YAAA;AACA,MAAA,aAAA;AACA,KAFA,CAAA;AAIA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AACA,MAAA,mBAAA,EAAA,mBADA;AACA,MAAA,kBAAA,EAAA;AADA,KAAA;AAGA;AA3EA,CAAA","sourcesContent":["<template>\n    <el-upload\n        class=\"avatar-uploader\"\n        :action=\"config.action\"\n        :data=\"data.uploadKey\"\n        :show-file-list=\"false\"\n        :on-success=\"handleAvatarSuccess\"\n        :before-upload=\"beforeAvatarUpload\">\n        <img v-if=\"data.image\" :src=\"data.image\" class=\"avatar\">\n        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n    </el-upload>\n</template>\n<script>\nimport { reactive, ref, watch, onMounted } from '@vue/composition-api';\nimport { QiniuToKen } from \"@/api/common\";\nexport default {\n    /**\n     * 1、组件的过程要做些什么事？（七牛云的token，显示默认图片、选择图片后渲染自身图片）\n     * 2、最终结果要做什么？（返回选择后的图片路径）\n     */\n    name: \"uploadImg\",\n    props: {\n        imgUrl: {\n            type: String,\n            default: \"\"\n        },\n        config: {\n            type: Object,\n            default: () => {}\n        }\n    },\n    setup(props, { root, emit }){\n        const data = reactive({\n            image: \"\",\n            uploadKey: {\n                token: \"\",\n                key: \"\"\n            }\n        });\n\n        const handleAvatarSuccess = (res, file) => {\n            let image = `${root.$store.getters[\"common/qiniuUrl\"]}${res.key}`;\n            data.image = image;\n            emit(\"update:imgUrl\", image);\n        }\n        \n        const beforeAvatarUpload = (file) => {\n            const isJPG = file.type === 'image/jpeg';\n            const isLt2M = file.size / 1024 / 1024 < 2;\n            if (!isJPG) {\n                root.$message.error('上传头像图片只能是 JPG 格式!');\n            }\n            if (!isLt2M) {\n                root.$message.error('上传头像图片大小不能超过 2MB!');\n            }\n            // 文件名转码\n            let suffix = file.name;\n            let key = encodeURI(`${suffix}`);\n            data.uploadKey.key = key;\n            return isJPG && isLt2M;\n        }\n\n        /**\n         * 获取七牛云token\n         */\n        const getQiniuToKen = () => {\n            let requestData = {\n                \"accesskey\": props.config.accesskey,\n                \"secretkey\": props.config.secretkey,\n                \"buckety\": props.config.buckety\n            }\n            QiniuToKen(requestData).then(response => {\n                data.uploadKey.token = response.data.data.token\n            })\n        }\n\n        /**\n         * 监听\n         */\n        watch(() => props.imgUrl, (value) => {\n            data.image = value\n        })\n\n        onMounted(() => {\n            getQiniuToKen()\n        })\n\n        return {\n            data, handleAvatarSuccess, beforeAvatarUpload\n        }\n    }\n}\n</script>\n<style lang=\"scss\" scoped>\n\n</style>"],"sourceRoot":"src/components/UploadImg"}]}