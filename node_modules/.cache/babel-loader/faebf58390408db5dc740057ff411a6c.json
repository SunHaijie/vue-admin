{"remainingRequest":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/thread-loader/dist/cjs.js!/Users/Jeff/Documents/workspace/vue-admin/node_modules/babel-loader/lib/index.js!/Users/Jeff/Documents/workspace/vue-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Jeff/Documents/workspace/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Jeff/Documents/workspace/vue-admin/src/views/Info/category.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Jeff/Documents/workspace/vue-admin/src/views/Info/category.vue","mtime":1614759277704},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1613959811244},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/thread-loader/dist/cjs.js","mtime":1613959818014},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/babel-loader/lib/index.js","mtime":1613959810487},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1613959811244},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/vue-loader/lib/index.js","mtime":1613959818680}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}