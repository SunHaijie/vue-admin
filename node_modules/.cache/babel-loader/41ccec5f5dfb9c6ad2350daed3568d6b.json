{"remainingRequest":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/babel-loader/lib/index.js!/Users/Jeff/Documents/workspace/vue-admin/src/mixins/cityPicker.js","dependencies":[{"path":"/Users/Jeff/Documents/workspace/vue-admin/src/mixins/cityPicker.js","mtime":1614522956444},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1613959811244},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/babel-loader/lib/index.js","mtime":1613959810487}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0IHsgR2V0Q2l0eVBpY2tlciB9IGZyb20gIkAvYXBpL2NvbW1vbiI7CmltcG9ydCB7IHJlYWN0aXZlLCB0b1JlZnMgfSBmcm9tICdAdnVlL2NvbXBvc2l0aW9uLWFwaSc7CmV4cG9ydCBmdW5jdGlvbiBjaXR5UGlja2VyKCkgewogIHZhciBkYXRhID0gcmVhY3RpdmUoewogICAgcHJvdmluY2VWYWx1ZTogIiIsCiAgICBjaXR5VmFsdWU6ICIiLAogICAgYXJlYVZhbHVlOiAiIiwKICAgIHN0cmVldFZhbHVlOiAiIiwKICAgIHByb3ZpbmNlRGF0YTogW10sCiAgICBjaXR5RGF0YTogW10sCiAgICBhcmVhRGF0YTogW10sCiAgICBzdHJlZXREYXRhOiBbXQogIH0pOwogIHZhciByZXN1bHREYXRhID0gcmVhY3RpdmUoewogICAgcHJvdmluY2VWYWx1ZTogIiIsCiAgICBjaXR5VmFsdWU6ICIiLAogICAgYXJlYVZhbHVlOiAiIiwKICAgIHN0cmVldFZhbHVlOiAiIgogIH0pOwogIC8qKgogICAqIOiOt+WPluecgeS7vQogICAqLwoKICB2YXIgZ2V0UHJvdmluY2UgPSBmdW5jdGlvbiBnZXRQcm92aW5jZSgpIHsKICAgIGdldERhdGEoewogICAgICB0eXBlOiAicHJvdmluY2UiCiAgICB9KTsKICB9OwogIC8qKgogICAqIOmAieaLqeecgeS7ve+8jOiOt+WPluWfjuW4ggogICAqLwoKCiAgdmFyIGhhbmRsZXJQcm92aW5jZSA9IGZ1bmN0aW9uIGhhbmRsZXJQcm92aW5jZSh2YWwpIHsKICAgIHJlc2V0VmFsdWUoewogICAgICB0eXBlOiAiY2l0eSIKICAgIH0pOwogICAgZ2V0RGF0YSh7CiAgICAgIHR5cGU6ICJjaXR5IiwKICAgICAgcHJvdmluY2VfY29kZTogdmFsCiAgICB9KTsKICB9OwogIC8qKgogICAqIOmAieaLqeWfjuW4gu+8jOiOt+WPluWMuuWOvwogICAqLwoKCiAgdmFyIGhhbmRsZXJDaXR5ID0gZnVuY3Rpb24gaGFuZGxlckNpdHkodmFsKSB7CiAgICByZXNldFZhbHVlKHsKICAgICAgdHlwZTogImFyZWEiCiAgICB9KTsKICAgIGdldERhdGEoewogICAgICB0eXBlOiAiYXJlYSIsCiAgICAgIGNpdHlfY29kZTogdmFsCiAgICB9KTsKICB9OwogIC8qKgogICAqIOmAieaLqeWMuuWOv++8jOiOt+WPluihl+mBkwogICAqLwoKCiAgdmFyIGhhbmRsZXJBcmVhID0gZnVuY3Rpb24gaGFuZGxlckFyZWEodmFsKSB7CiAgICByZXNldFZhbHVlKHsKICAgICAgdHlwZTogInN0cmVldCIKICAgIH0pOwogICAgZ2V0RGF0YSh7CiAgICAgIHR5cGU6ICJzdHJlZXQiLAogICAgICBhcmVhX2NvZGU6IHZhbAogICAgfSk7CiAgfTsKICAvKioKICAgKiDpgInmi6nooZfpgZMKICAgKi8KCgogIHZhciBoYW5kbGVyU3RyZWV0ID0gZnVuY3Rpb24gaGFuZGxlclN0cmVldCh2YWwpIHsKICAgIHJlc2V0VmFsdWUoewogICAgICB0eXBlOiAiIgogICAgfSk7CiAgfTsKICAvKioKICAgKiDojrflj5bmlbDmja4KICAgKi8KCgogIHZhciBnZXREYXRhID0gZnVuY3Rpb24gZ2V0RGF0YShyZXF1ZXN0RGF0YSkgewogICAgR2V0Q2l0eVBpY2tlcihyZXF1ZXN0RGF0YSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgZGF0YVsiIi5jb25jYXQocmVxdWVzdERhdGEudHlwZSwgIkRhdGEiKV0gPSByZXNwb25zZS5kYXRhLmRhdGEuZGF0YTsKICAgIH0pOwogIH07CiAgLyoqCiAgICog6YeN572u6YCJ6aG5CiAgICovCgoKICB2YXIgcmVzZXRWYWx1ZSA9IGZ1bmN0aW9uIHJlc2V0VmFsdWUocGFyYW1zKSB7CiAgICB2YXIgdmFsdWVKc29uID0gewogICAgICBjaXR5OiBbJ2NpdHlWYWx1ZScsICdhcmVhVmFsdWUnLCAnc3RyZWV0VmFsdWUnXSwKICAgICAgYXJlYTogWydhcmVhVmFsdWUnLCAnc3RyZWV0VmFsdWUnXSwKICAgICAgc3RyZWV0OiBbJ3N0cmVldFZhbHVlJ10KICAgIH07CiAgICB2YXIgYXJyT2JqID0gdmFsdWVKc29uW3BhcmFtcy50eXBlXTsgLy8g5riF56m65oyH5a6a55qEa2V55YC8CgogICAgaWYgKGFyck9iaikgewogICAgICBhcnJPYmouZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBkYXRhW2l0ZW1dID0gJyc7CiAgICAgIH0pOwogICAgfSAvLyDmlbDmja7pm4blkIjlpITnkIYKCgogICAgcmVzdWx0KCk7CiAgfTsKICAvKioKICAgKiDov5Tlm57mlbDmja7pm4blkIgKICAgKi8KCgogIHZhciByZXN1bHQgPSBmdW5jdGlvbiByZXN1bHQoKSB7CiAgICBmb3IgKHZhciBrZXkgaW4gcmVzdWx0RGF0YSkgewogICAgICByZXN1bHREYXRhW2tleV0gPSBkYXRhW2tleV07CiAgICB9CiAgfTsKCiAgcmV0dXJuIHsKICAgIGRhdGE6IGRhdGEsCiAgICByZXN1bHREYXRhOiByZXN1bHREYXRhLAogICAgLy8gLi4udG9SZWZzKGRhdGEpLCAgIC8vIOaKiuWvueixoeexu+Wei+i9rOS4uuWfuuehgOaVsOaNruexu+Wei++8jOWPr+i/m+ihjOino+aehOWTjeW6lAogICAgZ2V0UHJvdmluY2U6IGdldFByb3ZpbmNlLAogICAgaGFuZGxlclByb3ZpbmNlOiBoYW5kbGVyUHJvdmluY2UsCiAgICBoYW5kbGVyQ2l0eTogaGFuZGxlckNpdHksCiAgICBoYW5kbGVyQXJlYTogaGFuZGxlckFyZWEsCiAgICBoYW5kbGVyU3RyZWV0OiBoYW5kbGVyU3RyZWV0CiAgfTsKfQ=="},{"version":3,"sources":["/Users/Jeff/Documents/workspace/vue-admin/src/mixins/cityPicker.js"],"names":["GetCityPicker","reactive","toRefs","cityPicker","data","provinceValue","cityValue","areaValue","streetValue","provinceData","cityData","areaData","streetData","resultData","getProvince","getData","type","handlerProvince","val","resetValue","province_code","handlerCity","city_code","handlerArea","area_code","handlerStreet","requestData","then","response","params","valueJson","city","area","street","arrObj","forEach","item","result","key"],"mappings":"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","sourcesContent":["import { GetCityPicker } from \"@/api/common\"\nimport { reactive, toRefs } from '@vue/composition-api'\nexport function cityPicker() {\n\n    const data = reactive({\n        provinceValue: \"\",\n        cityValue: \"\",\n        areaValue: \"\",\n        streetValue: \"\",\n        provinceData: [],\n        cityData: [],\n        areaData: [],\n        streetData: []\n    })\n\n    const resultData = reactive({\n        provinceValue: \"\",\n        cityValue: \"\",\n        areaValue: \"\",\n        streetValue: \"\",\n    })\n    /**\n     * 获取省份\n     */\n    const getProvince = () => {\n        getData({ type: \"province\" });\n    }\n    /**\n     * 选择省份，获取城市\n     */\n    const handlerProvince = (val) => {\n        resetValue({ type: \"city\" })\n        getData({ type: \"city\", province_code: val });\n    }\n    /**\n     * 选择城市，获取区县\n     */\n    const handlerCity = (val) => {\n        resetValue({ type: \"area\" });\n        getData({ type: \"area\", city_code: val });\n    }\n    /**\n     * 选择区县，获取街道\n     */\n    const handlerArea = (val) => {\n        resetValue({ type: \"street\" });\n        getData({ type: \"street\", area_code: val });\n    }\n    /**\n     * 选择街道\n     */\n    const handlerStreet = (val) => {\n        resetValue({ type: \"\" })\n    }\n    /**\n     * 获取数据\n     */\n    const getData = (requestData) => {\n        GetCityPicker(requestData).then(response => {\n            data[`${requestData.type}Data`] = response.data.data.data\n        })\n    }\n    /**\n     * 重置选项\n     */\n    const resetValue = (params) => {\n        const valueJson = {\n            city: ['cityValue', 'areaValue', 'streetValue'],\n            area: ['areaValue', 'streetValue'],\n            street: ['streetValue']\n        }\n        const arrObj = valueJson[params.type];\n        // 清空指定的key值\n        if (arrObj) { arrObj.forEach(item => data[item] = '') }\n        // 数据集合处理\n        result()\n    }\n\n    /**\n     * 返回数据集合\n     */\n    const result = () => {\n        for (let key in resultData) (\n            resultData[key] = data[key]\n        )\n    }\n    return {\n        data,\n        resultData,\n        // ...toRefs(data),   // 把对象类型转为基础数据类型，可进行解构响应\n        getProvince,\n        handlerProvince,\n        handlerCity,\n        handlerArea,\n        handlerStreet\n    }\n}"]}]}