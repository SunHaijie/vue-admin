{"remainingRequest":"/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/babel-loader/lib/index.js!/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Jeff/Documents/workspace-vs/vue-admin/src/views/User/dialog/add.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Jeff/Documents/workspace-vs/vue-admin/src/views/User/dialog/add.vue","mtime":1614524980232},{"path":"/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1613959811244},{"path":"/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/babel-loader/lib/index.js","mtime":1613959810487},{"path":"/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1613959811244},{"path":"/Users/Jeff/Documents/workspace-vs/vue-admin/node_modules/vue-loader/lib/index.js","mtime":1613959818680}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHNoYTEgZnJvbSAnanMtc2hhMSc7CmltcG9ydCB7IEdldFJvbGUsIFVzZXJBZGQgfSBmcm9tICJAL2FwaS91c2VyIjsKaW1wb3J0IHsgcmVhY3RpdmUsIHJlZiwgd2F0Y2gsIG9uQmVmb3JlTW91bnQgfSBmcm9tICdAdnVlL2NvbXBvc2l0aW9uLWFwaSc7IC8vIOi/h+a7pAoKaW1wb3J0IHsgc3RyaXBzY3JpcHQsIHZhbGlkYXRlUGFzcywgdmFsaWRhdGVFbWFpbCB9IGZyb20gJ0AvdXRpbHMvdmFsaWRhdGUnOyAvLyDnu4Tku7YKCmltcG9ydCBDaXR5UGlja2VyIGZyb20gIkBjL0NpdHlQaWNrZXIiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2RpYWxvZ0luZm8nLAogIGNvbXBvbmVudHM6IHsKICAgIENpdHlQaWNrZXI6IENpdHlQaWNrZXIKICB9LAogIHByb3BzOiB7CiAgICBmbGFnOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgZWRpdERhdGE6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHt9CiAgICB9CiAgfSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMsIF9yZWYpIHsKICAgIHZhciBlbWl0ID0gX3JlZi5lbWl0LAogICAgICAgIHJvb3QgPSBfcmVmLnJvb3QsCiAgICAgICAgcmVmcyA9IF9yZWYucmVmczsKCiAgICAvLyDpqozor4HnlKjmiLflkI0KICAgIHZhciB2YWxpZGF0ZVVzZXJuYW1lID0gZnVuY3Rpb24gdmFsaWRhdGVVc2VybmFtZShydWxlLCB2YWx1ZSwgY2FsbGJhY2spIHsKICAgICAgaWYgKHZhbHVlID09PSAnJykgewogICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcign6K+36L6T5YWl55So5oi35ZCNJykpOwogICAgICB9IGVsc2UgaWYgKHZhbGlkYXRlRW1haWwodmFsdWUpKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCfnlKjmiLflkI3moLzlvI/mnInor68nKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY2FsbGJhY2soKTsgLy90cnVlCiAgICAgIH0KICAgIH07IC8vIOmqjOivgeWvhueggQoKCiAgICB2YXIgdmFsaWRhdGVQYXNzd29yZCA9IGZ1bmN0aW9uIHZhbGlkYXRlUGFzc3dvcmQocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICAgIC8vIOi/h+a7pOWQjueahOaVsOaNrgogICAgICBpZiAodmFsdWUpIHsKICAgICAgICBkYXRhLmZvcm0ucGFzc3dvcmQgPSBzdHJpcHNjcmlwdCh2YWx1ZSk7CiAgICAgICAgdmFsdWUgPSBkYXRhLmZvcm0ucGFzc3dvcmQ7CiAgICAgIH0KCiAgICAgIGlmICh2YWx1ZSA9PT0gJycpIHsKICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoIuivt+i+k+WFpeWvhueggSIpKTsKICAgICAgfSBlbHNlIGlmICh2YWxpZGF0ZVBhc3ModmFsdWUpKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCLlr4bnoIHkuLo26IezMjDkvY3mlbDlrZcr5a2X5q+NIikpOwogICAgICB9IGVsc2UgewogICAgICAgIGNhbGxiYWNrKCk7CiAgICAgIH0KICAgIH07CiAgICAvKioKICAgICAqIOaVsOaNrgogICAgICovCgoKICAgIHZhciBkYXRhID0gcmVhY3RpdmUoewogICAgICBkaWFsb2dfaW5mb19mbGFnOiBmYWxzZSwKICAgICAgLy8g5by556qX5qCH6K6wCiAgICAgIGNpdHlQaWNrZXJEYXRhOiB7fSwKICAgICAgZm9ybUxhYmVsV2lkdGg6ICc5MHB4JywKICAgICAgZm9ybTogewogICAgICAgIHVzZXJuYW1lOiAiIiwKICAgICAgICB0cnVlbmFtZTogIiIsCiAgICAgICAgcGFzc3dvcmQ6ICIiLAogICAgICAgIHBob25lOiAiIiwKICAgICAgICByZWdpb246ICIiLAogICAgICAgIHN0YXR1czogIjIiLAogICAgICAgIHJvbGU6IFtdCiAgICAgIH0sCiAgICAgIHJ1bGVzOiByZWFjdGl2ZSh7CiAgICAgICAgdXNlcm5hbWU6IFt7CiAgICAgICAgICB2YWxpZGF0b3I6IHZhbGlkYXRlVXNlcm5hbWUsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XSwKICAgICAgICBwYXNzd29yZDogW3sKICAgICAgICAgIHZhbGlkYXRvcjogdmFsaWRhdGVQYXNzd29yZCwKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH1dLAogICAgICAgIHJvbGU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICLor7fpgInmi6nop5LoibIiLAogICAgICAgICAgdHJpZ2dlcjogJ2NoYW5nZScKICAgICAgICB9XQogICAgICB9KSwKICAgICAgLy8g6KeS6Imy6YCJ5oupCiAgICAgIHJvbGVJdGVtOiBbXSwKICAgICAgLy8g5oyJ6ZKu5Yqg6L29CiAgICAgIHN1Ym1pdExvYWRpbmc6IGZhbHNlCiAgICB9KTsgLy8gd2F0Y2gKCiAgICB3YXRjaChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBkYXRhLmRpYWxvZ19pbmZvX2ZsYWcgPSBwcm9wcy5mbGFnOwogICAgfSk7CiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKICAgICAqICoqKioqKioqKioqKioqKioqKioqCiAgICAgKiAqKioqKioqKioqCiAgICAgKiAqKioqKioqKiAqLwoKICAgIC8qKgogICAgICog6K+35rGC6KeS6ImyCiAgICAgKi8KCiAgICB2YXIgZ2V0Um9sZSA9IGZ1bmN0aW9uIGdldFJvbGUoKSB7CiAgICAgIEdldFJvbGUoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGRhdGEucm9sZUl0ZW0gPSByZXNwb25zZS5kYXRhLmRhdGE7CiAgICAgIH0pOwogICAgfTsKICAgIC8qKgogICAgICog5by556qX5omT5byA77yM5Yqo55S757uT5p2f5pe2CiAgICAgKi8KCgogICAgdmFyIG9wZW5EaWFsb2cgPSBmdW5jdGlvbiBvcGVuRGlhbG9nKCkgewogICAgICAvLyDop5LoibLor7fmsYIKICAgICAgZ2V0Um9sZSgpOyAvLyDliJ3lp4vlgLzlpITnkIYKCiAgICAgIHZhciBlZGl0RGF0YSA9IHByb3BzLmVkaXREYXRhOwogICAgICBlZGl0RGF0YS5yb2xlID0gZWRpdERhdGEucm9sZS5zcGxpdCgnLCcpOwogICAgICBkYXRhLmZvcm0gPSBlZGl0RGF0YTsKICAgIH07CiAgICAvKioKICAgICAqIHZ1ZTIuMCBtZXRob2RzCiAgICAgKi8KCgogICAgdmFyIGNsb3NlID0gZnVuY3Rpb24gY2xvc2UoKSB7CiAgICAgIGRhdGEuZGlhbG9nX2luZm9fZmxhZyA9IGZhbHNlOwogICAgICByZXNldEZvcm0oKTsKICAgICAgZW1pdCgidXBkYXRlOmZsYWciLCBmYWxzZSk7CiAgICB9OwoKICAgIHZhciByZXNldEZvcm0gPSBmdW5jdGlvbiByZXNldEZvcm0oKSB7CiAgICAgIGRhdGEuY2l0eVBpY2tlckRhdGEgPSB7fTsKICAgICAgcmVmcy5hZGRJbmZvRm9ybS5yZXNldEZpZWxkcygpOwogICAgfTsKCiAgICB2YXIgc3VibWl0ID0gZnVuY3Rpb24gc3VibWl0KGZvcm1OYW1lKSB7CiAgICAgIHJlZnNbZm9ybU5hbWVdLnZhbGlkYXRlKGZ1bmN0aW9uICh2YWxpZCkgewogICAgICAgIC8vIOihqOWNlemqjOivgemAmui/hwogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgLy8g5pWw5o2u5aSE55CGCiAgICAgICAgICB2YXIgcmVxdWVzdERhdGEgPSBPYmplY3QuYXNzaWduKHt9LCBkYXRhLmZvcm0pOyAvLwoKICAgICAgICAgIHJlcXVlc3REYXRhLnJvbGUgPSByZXF1ZXN0RGF0YS5yb2xlLmpvaW4oKTsgLy8g5pWw57uE6L2s5a2X56ym5Liy77yM6buY6K6k5Lul77yM5Y+36ZqU5byACgogICAgICAgICAgcmVxdWVzdERhdGEucmVnaW9uID0gSlNPTi5zdHJpbmdpZnkoZGF0YS5jaXR5UGlja2VyRGF0YSk7CiAgICAgICAgICByZXF1ZXN0RGF0YS5wYXNzd29yZCA9IHNoYTEocmVxdWVzdERhdGEucGFzc3dvcmQpOwogICAgICAgICAgVXNlckFkZChyZXF1ZXN0RGF0YSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgdmFyIGRhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICAgICAgICByb290LiRtZXNzYWdlKHsKICAgICAgICAgICAgICBtZXNzYWdlOiBkYXRhLm1lc3NhZ2UsCiAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjbG9zZSgpOwogICAgICAgICAgICBlbWl0KCdyZWZyZXNoVGFiZWxEYXRhJyk7CiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9OwoKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IGRhdGEsCiAgICAgIC8vIG1ldGhvZHMKICAgICAgY2xvc2U6IGNsb3NlLAogICAgICBvcGVuRGlhbG9nOiBvcGVuRGlhbG9nLAogICAgICBzdWJtaXQ6IHN1Ym1pdAogICAgfTsKICB9Cn07"},{"version":3,"sources":["add.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <el-dialog title=\"新增\" :visible.sync=\"data.dialog_info_flag\" @close=\"close\" width=\"700px\" @opened=\"openDialog\">\n        <el-form :model=\"data.form\" :rules=\"data.rules\" ref=\"addInfoForm\">\n            <el-form-item label=\"用户名：\" :label-width=\"data.formLabelWidth\" prop=\"username\">\n                <el-input v-model=\"data.form.username\" placeholder=\"请输入邮箱\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"密码：\" :label-width=\"data.formLabelWidth\" prop=\"password\">\n                <el-input type=\"password\" v-model=\"data.form.password\" placeholder=\"请输入6~20数字+字母\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"姓名：\" :label-width=\"data.formLabelWidth\" prop=\"truename\">\n                <el-input v-model=\"data.form.truename\" placeholder=\"请输入真实姓名\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"手机号：\" :label-width=\"data.formLabelWidth\" prop=\"phone\">\n                <el-input v-model.number=\"data.form.phone\" placeholder=\"请输入手机号\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"地区：\" :label-width=\"data.formLabelWidth\" prop=\"region\">\n                <CityPicker :cityPickerData.sync=\"data.cityPickerData\" />\n            </el-form-item>\n            <el-form-item label=\"是否启用：\" :label-width=\"data.formLabelWidth\" prop=\"status\">\n                <el-radio v-model=\"data.form.status\" label=\"1\">禁用</el-radio>\n                <el-radio v-model=\"data.form.status\" label=\"2\">启用</el-radio>\n            </el-form-item>\n            <el-form-item label=\"角色：\" :label-width=\"data.formLabelWidth\" prop=\"role\">\n                <el-checkbox-group v-model=\"data.form.role\">\n                    <el-checkbox v-for=\"item in data.roleItem\" :key=\"item.role\" :label=\"item.role\">{{ item.name }}</el-checkbox>\n                </el-checkbox-group>\n            </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"close\">取消</el-button>\n            <el-button type=\"danger\" :loading=\"data.submitLoading\" @click=\"submit('addInfoForm')\">确定</el-button>\n        </div>\n    </el-dialog>\n</template>\n<script>\nimport sha1 from 'js-sha1';\nimport { GetRole, UserAdd } from \"@/api/user\";\nimport { reactive, ref, watch, onBeforeMount } from '@vue/composition-api';\n// 过滤\nimport { stripscript, validatePass, validateEmail } from '@/utils/validate';\n// 组件\nimport CityPicker from \"@c/CityPicker\"\nexport default {\n    name: 'dialogInfo',\n    components: { CityPicker },\n    props: {\n        flag: {\n            type: Boolean,\n            default: false\n        },\n        editData: {\n            type: Object,\n            default: () => {}\n        }\n    },\n   \n    setup(props, { emit, root, refs }){\n        // 验证用户名\n        let validateUsername = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入用户名'));\n            } else if(validateEmail(value)){\n                callback(new Error('用户名格式有误'));\n            } else {\n                callback(); //true\n            }\n        };\n        // 验证密码\n        let validatePassword = (rule, value, callback) => {\n            // 过滤后的数据\n            if(value) {\n                data.form.password = stripscript(value);\n                value = data.form.password;\n            }\n            if (value === '') {\n                callback(new Error(\"请输入密码\"));\n            } else if (validatePass(value)) {\n                callback(new Error(\"密码为6至20位数字+字母\"));\n            } else {\n                callback();\n            }\n        };\n        /**\n         * 数据\n         */\n        const data = reactive({\n            dialog_info_flag: false,  // 弹窗标记\n            cityPickerData: {},\n            formLabelWidth: '90px',\n            form: {\n                username: \"\",\n                truename: \"\",\n                password: \"\",\n                phone: \"\",\n                region: \"\",\n                status: \"2\",\n                role: []\n            },\n            rules: reactive({\n                username: [\n                    { validator: validateUsername, trigger: 'blur' }\n                ],\n                password: [\n                    { validator: validatePassword, trigger: 'blur' }\n                ],\n                role: [\n                    { required: true, message: \"请选择角色\", trigger: 'change' }\n                ]\n            }),\n            // 角色选择\n            roleItem: [],\n            // 按钮加载\n            submitLoading: false\n        });\n        // watch\n        watch(() => data.dialog_info_flag = props.flag);\n\n        /*****************************************\n         * ********************\n         * **********\n         * ******** */\n        /**\n         * 请求角色\n         */\n        const getRole = () => {\n            GetRole().then(response => {\n                data.roleItem = response.data.data\n            })\n        }\n        /**\n         * 弹窗打开，动画结束时\n         */\n        const openDialog = () => {\n            // 角色请求\n            getRole()\n            // 初始值处理\n            let editData = props.editData;\n            editData.role = editData.role.split(',');\n            data.form = editData\n        }\n        \n        /**\n         * vue2.0 methods\n         */\n        const close = () => {\n            data.dialog_info_flag = false;\n            resetForm()\n            emit(\"update:flag\", false);\n        }\n        \n        const resetForm = () => {\n            data.cityPickerData = {}\n            refs.addInfoForm.resetFields();\n           \n        }\n        const submit = (formName) => {\n            refs[formName].validate((valid) => {\n                // 表单验证通过\n                if (valid) {\n                    // 数据处理\n                    let requestData = Object.assign({}, data.form); //\n                    requestData.role = requestData.role.join();  // 数组转字符串，默认以，号隔开\n                    requestData.region = JSON.stringify(data.cityPickerData);\n                    requestData.password = sha1(requestData.password);\n                    UserAdd(requestData).then(response => {\n                        let data = response.data\n                        root.$message({\n                            message: data.message,\n                            type: \"success\"\n                        })\n                        close();\n                        emit('refreshTabelData');\n                    })\n                } else {\n                    return false;\n                }\n            })\n        }\n        return {\n            data,\n            // methods\n            close, openDialog, submit\n        }\n    }\n}\n</script>\n<style scoped>\n\n</style>"],"sourceRoot":"src/views/User/dialog"}]}