{"remainingRequest":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/babel-loader/lib/index.js!/Users/Jeff/Documents/workspace/vue-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Jeff/Documents/workspace/vue-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Jeff/Documents/workspace/vue-admin/src/views/Login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Jeff/Documents/workspace/vue-admin/src/views/Login/index.vue","mtime":1614308623038},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1613959811244},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/babel-loader/lib/index.js","mtime":1613959810487},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/cache-loader/dist/cjs.js","mtime":1613959811244},{"path":"/Users/Jeff/Documents/workspace/vue-admin/node_modules/vue-loader/lib/index.js","mtime":1613959818680}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnRpbWVycy5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBzaGExIGZyb20gJ2pzLXNoYTEnOwppbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSAnZWxlbWVudC11aSc7CmltcG9ydCB7IEdldFNtcywgUmVnaXN0ZXIsIExvZ2luIH0gZnJvbSAnQC9hcGkvbG9naW4uanMnOwppbXBvcnQgeyByZWFjdGl2ZSwgcmVmLCBpc1JlZiwgdG9SZWZzLCBvbk1vdW50ZWQsIHdhdGNoLCBvblVubW91bnRlZCB9IGZyb20gJ0B2dWUvY29tcG9zaXRpb24tYXBpJzsKaW1wb3J0IHsgc3RyaXBzY3JpcHQsIHZhbGlkYXRlRW1haWwsIHZhbGlkYXRlUGFzcywgdmFsaWRhdGVDb2RlIH0gZnJvbSAnQC91dGlscy92YWxpZGF0ZS5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnbG9naW4nLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcywgX3JlZikgewogICAgdmFyIHJlZnMgPSBfcmVmLnJlZnMsCiAgICAgICAgcm9vdCA9IF9yZWYucm9vdDsKCiAgICAvL+mqjOivgeeUqOaIt+WQjQogICAgdmFyIHZhbGlkYXRlVXNlcm5hbWUgPSBmdW5jdGlvbiB2YWxpZGF0ZVVzZXJuYW1lKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICBpZiAodmFsdWUgPT09ICcnKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCfor7fovpPlhaXnlKjmiLflkI0nKSk7CiAgICAgIH0gZWxzZSBpZiAodmFsaWRhdGVFbWFpbCh2YWx1ZSkpIHsKICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoJ+eUqOaIt+WQjeagvOW8j+acieivrycpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjYWxsYmFjaygpOyAvL3RydWUKICAgICAgfQogICAgfTsgLy/pqozor4Hlr4bnoIEKCgogICAgdmFyIHZhbGlkYXRlUGFzc3dvcmQgPSBmdW5jdGlvbiB2YWxpZGF0ZVBhc3N3b3JkKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICAvL+i/h+a7pOWQjueahOaVsOaNrgogICAgICBydWxlRm9ybS5wYXNzd29yZCA9IHN0cmlwc2NyaXB0KHZhbHVlKTsKICAgICAgdmFsdWUgPSBydWxlRm9ybS5wYXNzd29yZDsKCiAgICAgIGlmICh2YWx1ZSA9PT0gJycpIHsKICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoJ+ivt+i+k+WFpeWvhueggScpKTsKICAgICAgfSBlbHNlIGlmICh2YWxpZGF0ZVBhc3ModmFsdWUpKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCflr4bnoIHkuLo26IezMjDkvY3nmoTmlbDlrZcr5a2X5q+NJykpOwogICAgICB9IGVsc2UgewogICAgICAgIGNhbGxiYWNrKCk7CiAgICAgIH0KICAgIH07IC8v6aqM6K+B6YeN5aSN5a+G56CBCgoKICAgIHZhciB2YWxpZGF0ZVBhc3N3b3JkcyA9IGZ1bmN0aW9uIHZhbGlkYXRlUGFzc3dvcmRzKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICAvL+WmguaenOaooeWdl+WAvOS4umxvZ2lu77yM55u05o6l6YCa6L+H77yM5peg6ZyA6aqM6K+B6YeN5aSN5a+G56CB44CCCiAgICAgIGlmIChtb2RlbC52YWx1ZSA9PT0gJ2xvZ2luJykgewogICAgICAgIGNhbGxiYWNrKCk7CiAgICAgIH0gLy/ov4fmu6TlkI7nmoTmlbDmja4KCgogICAgICBydWxlRm9ybS5wYXNzd29yZHMgPSBzdHJpcHNjcmlwdCh2YWx1ZSk7CiAgICAgIHZhbHVlID0gcnVsZUZvcm0ucGFzc3dvcmRzOwoKICAgICAgaWYgKHZhbHVlID09PSAnJykgewogICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcign6K+35YaN5qyh6L6T5YWl5a+G56CBJykpOwogICAgICB9IGVsc2UgaWYgKHZhbHVlICE9IHJ1bGVGb3JtLnBhc3N3b3JkKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCfph43lpI3lr4bnoIHkuI3mraPnoa4nKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY2FsbGJhY2soKTsKICAgICAgfQogICAgfTsgLy/pqozor4Hpqozor4HnoIEKCgogICAgdmFyIGNoZWNrQ29kZSA9IGZ1bmN0aW9uIGNoZWNrQ29kZShydWxlLCB2YWx1ZSwgY2FsbGJhY2spIHsKICAgICAgaWYgKHZhbHVlID09PSAnJykgewogICAgICAgIHJldHVybiBjYWxsYmFjayhuZXcgRXJyb3IoJ+ivt+i+k+WFpemqjOivgeeggScpKTsKICAgICAgfSBlbHNlIGlmICh2YWxpZGF0ZUNvZGUodmFsdWUpKSB7CiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG5ldyBFcnJvcign6aqM6K+B56CB5qC85byP5pyJ6K+vJykpOwogICAgICB9IGVsc2UgewogICAgICAgIGNhbGxiYWNrKCk7CiAgICAgIH0KICAgIH07CiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqLwoKICAgIC8qKgogICAgICog5aOw5piO5pWw5o2uCiAgICAgKi8KICAgIC8v6L+Z6YeM6Z2i5pS+572uZGF0YeaVsOaNruOAgeeUn+WRveWRqOacn+OAgeiHquWumuS5ieWHveaVsAoKCiAgICB2YXIgbWVudVRhYiA9IHJlYWN0aXZlKFt7CiAgICAgIHR4dDogJ+eZu+W9lScsCiAgICAgIGN1cnJlbnQ6IHRydWUsCiAgICAgIHR5cGU6ICdsb2dpbicKICAgIH0sIHsKICAgICAgdHh0OiAn5rOo5YaMJywKICAgICAgY3VycmVudDogZmFsc2UsCiAgICAgIHR5cGU6ICdyZWdpc3RlcicKICAgIH1dKTsgLy/mqKHlnZflgLwKCiAgICB2YXIgbW9kZWwgPSByZWYoJ2xvZ2luJyk7IC8v55m75b2V5oyJ6ZKu56aB55So54q25oCBCgogICAgdmFyIGxvZ2luQnV0dG9uU3RhdHVzID0gcmVmKHRydWUpOyAvL+mqjOivgeeggeaMiemSrueKtuaAgQoKICAgIHZhciBjb2RlQnV0dG9uU3RhdHVzID0gcmVhY3RpdmUoewogICAgICBzdGF0dXM6IGZhbHNlLAogICAgICB0ZXh0OiAn6I635Y+W6aqM6K+B56CBJwogICAgfSk7IC8v5YCS6K6h5pe2CgogICAgdmFyIHRpbWVyID0gcmVmKG51bGwpOyAvL+ihqOWNlee7keWumuaVsOaNrgoKICAgIHZhciBydWxlRm9ybSA9IHJlYWN0aXZlKHsKICAgICAgdXNlcm5hbWU6ICcyNDEyNTI2MjcxQHFxLmNvbScsCiAgICAgIHBhc3Nlb3JkOiAnd29kZTEyMzQ1NicsCiAgICAgIHBhc3N3b3JkczogJ3dvZGUxMjM0NTYnLAogICAgICBjb2RlOiAnJwogICAgfSk7IC8v6KGo5Y2V6aqM6K+BCgogICAgdmFyIHJ1bGVzID0gcmVhY3RpdmUoewogICAgICB1c2VybmFtZTogW3sKICAgICAgICB2YWxpZGF0b3I6IHZhbGlkYXRlVXNlcm5hbWUsCiAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgIH1dLAogICAgICBwYXNzd29yZDogW3sKICAgICAgICB2YWxpZGF0b3I6IHZhbGlkYXRlUGFzc3dvcmQsCiAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgIH1dLAogICAgICBwYXNzd29yZHM6IFt7CiAgICAgICAgdmFsaWRhdG9yOiB2YWxpZGF0ZVBhc3N3b3JkcywKICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgfV0sCiAgICAgIGNvZGU6IFt7CiAgICAgICAgdmFsaWRhdG9yOiBjaGVja0NvZGUsCiAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgIH1dCiAgICB9KTsKICAgIC8qKgogICAgICog5aOw5piO5Ye95pWwCiAgICAgKi8KICAgIC8v5YiH5o2i5qih5Z2XCgogICAgdmFyIHRvZ2dsZU1lbnUgPSBmdW5jdGlvbiB0b2dnbGVNZW51KGRhdGEpIHsKICAgICAgbWVudVRhYi5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtLCBpbmRleCkgewogICAgICAgIGVsZW0uY3VycmVudCA9IGZhbHNlOwogICAgICB9KTsgLy/pq5jlhYkKCiAgICAgIGRhdGEuY3VycmVudCA9IHRydWU7IC8v5L+u5pS55qih5Z2X5YC8CgogICAgICBtb2RlbC52YWx1ZSA9IGRhdGEudHlwZTsKICAgICAgcmVzZXRGb3JtRGF0YSgpOwogICAgICBjbGVhckNvdW50RG93bigpOwogICAgfTsgLy/muIXpmaTooajljZXmlbDmja4KCgogICAgdmFyIHJlc2V0Rm9ybURhdGEgPSBmdW5jdGlvbiByZXNldEZvcm1EYXRhKCkgewogICAgICAvL+mHjee9ruihqOWNlQogICAgICByZWZzLmxvZ2luRm9ybS5yZXNldEZpZWxkcygpOwogICAgfTsgLy/mm7TmlrDmjInpkq7nirbmgIEKCgogICAgdmFyIHVwZGF0YUJ1dHRvblN0YXR1cyA9IGZ1bmN0aW9uIHVwZGF0YUJ1dHRvblN0YXR1cygpIHsKICAgICAgY29kZUJ1dHRvblN0YXR1cy5zdGF0dXMgPSBwYXJhbXMuc3RhdHVzOwogICAgICBjb2RlQnV0dG9uU3RhdHVzLnRleHQgPSBwYXJhbXMudGV4dDsKICAgIH07CiAgICAvKioKICAgICAqIOiOt+WPlumqjOivgeeggQogICAgICovCgoKICAgIHZhciBnZXRTbXMgPSBmdW5jdGlvbiBnZXRTbXMoKSB7CiAgICAgIC8v6L+b6KGM5o+Q56S6CiAgICAgIGlmIChydWxlRm9ybS51c2VybmFtZSA9PSAnJykgewogICAgICAgIHJvb3QuJG1lc3NhZ2UuZXJyb3IoJ+mCrueuseS4jeiDveS4uuepuu+8ge+8ge+8gScpOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgaWYgKHZhbGlkYXRlRW1haWwocnVsZUZvcm0udXNlcm5hbWUpKSB7CiAgICAgICAgcm9vdC4kbWVzc2FnZS5lcnJvcign6YKu566x5qC85byP5pyJ6K+v77yM6K+36YeN5paw6L6T5YWl77yB77yB77yBJyk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9OyAvL+iOt+WPlumqjOivgeeggQoKCiAgICB2YXIgcmVxdWVzdERhdGEgPSB7CiAgICAgIHVzZXJuYW1lOiBydWxlRm9ybS51c2VybmFtZSwKICAgICAgbW9kdWxlOiBtb2RlbC52YWx1ZQogICAgfTsgLy/kv67mlLnojrflj5bpqozor4HmjInpkq7nirbmgIEKCiAgICB1cGRhdGFCdXR0b25TdGF0dXMoewogICAgICBzdGF0dXM6IHRydWUsCiAgICAgIHRleHQ6ICflj5HpgIHkuK0nCiAgICB9KTsgLy/lu7bml7blpJrplb/ml7bpl7QKCiAgICBHZXRTbXMocmVxdWVzdERhdGEpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YTsKICAgICAgcm9vdC4kbWVzc2FnZSh7CiAgICAgICAgbWVzc2FnZTogZGF0YS5tZXNzYWdlLAogICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICBkYW5nZXJvdXNseVVzZUhUTUxTdHJpbmc6IHRydWUKICAgICAgfSk7IC8v5ZCv55So55m75b2V5oiW5rOo5YaM5oyJ6ZKuCgogICAgICBsb2dpbkJ1dHRvblN0YXR1cy52YWx1ZSA9IGZhbHNlOyAvL+iwg+WumuaXtuWZqO+8jOWAkuiuoeaXtgoKICAgICAgY291bnREb3duKDYwKTsKICAgIH0pWyJjYXRjaCJdKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAvL+WQr+eUqOeZu+W9leaIluazqOWGjOaMiemSrgogICAgICBsb2dpbkJ1dHRvblN0YXR1cy52YWx1ZSA9IGZhbHNlOwogICAgICB1cGRhdGFCdXR0b25TdGF0dXMoewogICAgICAgIHN0YXR1czogZmFsc2UsCiAgICAgICAgdGV4dDogJ+WGjeasoeiOt+WPlicKICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgIH0pOwogICAgLyoqCiAgICAqIOaPkOS6pOihqOWNlQogICAgKi8KCiAgICB2YXIgc3VibWl0Rm9ybSA9IGZ1bmN0aW9uIHN1Ym1pdEZvcm0oZm9ybU5hbWUpIHsKICAgICAgcmVzW2Zvcm1OYW1lXS52YWxpZGF0ZShmdW5jdGlvbiAodmFsaWQpIHsKICAgICAgICAvL+ihqOWNlemqjOivgemAmui/hwogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgLy/kuInlhYPov5DnrpcKICAgICAgICAgIG1vZGVsLnZhbHVlID09PSAnbG9naW4nID8gbG9naW4oKSA6IHJlZ2lzdGVyKCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBzdWJtaXQnKTsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfTsKICAgIC8qKgogICAgICog55m75b2VCiAgICAgKi8KCgogICAgdmFyIGxvZ2luID0gZnVuY3Rpb24gbG9naW4oKSB7CiAgICAgIHZhciByZXB1ZXN0RGF0YSA9IHsKICAgICAgICB1c2VybmFtZTogcnVsZUZvcm0udXNlcm5hbWUsCiAgICAgICAgcGFzc2VvcmQ6IHNoYTEocnVsZUZvcm0ucGFzc2VvcmQpLAogICAgICAgIGNvZGU6IHJ1bGVGb3JtLmNvZGUKICAgICAgfTsKICAgICAgTG9naW4ocmVwdWVzdERhdGEpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29uc29sZS5sb2coJ+eZu+W9leaIkOWKnycpOwogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKGVycm9yKSB7fSk7CiAgICB9OwogICAgLyoqCiAgICAgKiDms6jlhowKICAgICAqLwoKCiAgICB2YXIgcmVnaXN0ZXIgPSBmdW5jdGlvbiByZWdpc3RlcigpIHsKICAgICAgdmFyIHJlcXVlc3REYXRhID0gewogICAgICAgIHVzZXJuYW1lOiBydWxlRm9ybS51c2VybmFtZSwKICAgICAgICBwYXNzd29yZDogc2hhMShydWxlRm9ybS5wYXNzZW9yZCksCiAgICAgICAgY29kZTogcnVsZUZvcm0uY29kZSwKICAgICAgICBtb2R1bGU6ICdyZWdpc3RlcicKICAgICAgfTsgLy/ms6jlhozmjqXlj6MKCiAgICAgIFJlZ2lzdGVyKHJlcXVlc3REYXRhKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICByb290LiRtZXNzYWdlKHsKICAgICAgICAgIG1lc3NhZ2U6IGRhdGEubWVzc2FnZSwKICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJwogICAgICAgIH0pOyAvL+aooeaLn+azqOWGjOaIkOWKnwoKICAgICAgICB0b2dnbGVNZW51KG1lbnVUYWJbMF0pOwogICAgICAgIGNsZWFyQ291bnREb3duKCk7CiAgICAgIH0pWyJjYXRjaCJdKGZ1bmN0aW9uIChlcnJvcikgey8v5aSx6LSl5omn6KGM5Luj56CBCiAgICAgIH0pOwogICAgfTsgLy8gY29uc3Qgc3VibWl0Rm9ybSA9IChmb3JtTmFtZSA9PiB7CiAgICAvLyAgICAgYXhpb3MucmVxdWVzdCh7CiAgICAvLyAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgLy8gICAgICAgICB1cmw6ICcvdXNlci8xMjM0NScsCiAgICAvLyAgICAgICAgIGRhdGE6IHsKICAgIC8vICAgICAgICAgICAgIGZpcnN0TmFtZTogJ0ZyZWQnLAogICAgLy8gICAgICAgICAgICAgbGFzdE5hbWU6ICdGbGludHN0b25lJwogICAgLy8gICAgICAgICB9CiAgICAvLyAgICAgfSkKICAgIC8vICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgIC8vICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgLy8gICAgIH0pCiAgICAvLyAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgLy8gICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAvLyAgICAgfSk7CiAgICAvLyAgICAgcmVmc1tmb3JtTmFtZV0udmFsaWRhdGUoKHZhbGlkKSA9PiB7CiAgICAvLyAgICAgICAgIGlmICh2YWxpZCkgewogICAgLy8gICAgICAgICAgICAgYWxlcnQoJ3N1Ym1pdCEnKTsKICAgIC8vICAgICAgICAgfSBlbHNlIHsKICAgIC8vICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBzdWJtaXQhIScpOwogICAgLy8gICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgLy8gICAgICAgICB9CiAgICAvLyAgICAgfSkKICAgIC8vIH0pCgogICAgLyoqCiAgICAgKiDlgJLorqHml7YKICAgICAqLwoKCiAgICB2YXIgY291bnREb3duID0gZnVuY3Rpb24gY291bnREb3duKG51bWJlcikgewogICAgICAvL3NldFRpbWVvdXQg5Y+q5omn6KGM5LiA5qyhCiAgICAgIC8vc2V0SW50ZXJ2YWwg5LiN5pat5Zyw5omn6KGM77yM6ZyA6KaB5p2h5Lu25omN5Lya5YGc5q2iCiAgICAgIHZhciB0aW1lID0gbnVtYmVyOwogICAgICB0aW1lci52YWx1ZSA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICB0aW1lLS07CiAgICAgICAgY29uc29sZS5sb2codGltZSk7CiAgICAgIH0sIDEwMDApOwogICAgfTsKICAgIC8qKgogICAgICog55Sf5ZG95ZGo5pyfCiAgICAgKi8KICAgIC8v5oyC5Zyo5a6M5oiQ5ZCOCgoKICAgIG9uTW91bnRlZChmdW5jdGlvbiAoKSB7CiAgICAgIEdldFNtcygpOwogICAgfSk7CiAgICByZXR1cm4gewogICAgICBtZW51VGFiOiBtZW51VGFiLAogICAgICBtb2RlbDogbW9kZWwsCiAgICAgIGxvZ2luQnV0dG9uU3RhdHVzOiBsb2dpbkJ1dHRvblN0YXR1cywKICAgICAgY29kZUJ1dHRvblN0YXR1czogY29kZUJ1dHRvblN0YXR1cywKICAgICAgdG9nZ2xlTWVudTogdG9nZ2xlTWVudSwKICAgICAgc3VibWl0Rm9ybTogc3VibWl0Rm9ybSwKICAgICAgcnVsZUZvcm06IHJ1bGVGb3JtLAogICAgICBydWxlczogcnVsZXMsCiAgICAgIGdldFNtczogZ2V0U21zLAogICAgICB0aW1lcjogdGltZXIKICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"login\">\n        <div class=\"login-wrap\">\n            <ul class=\"menu-tab\"> \n                <li v-for=\"item in menuTab\" :key=\"item.id\" :class=\"{'current': item.current}\" @click=\"toggleMenu(item)\">{{ item.txt }}</li>\n            </ul>\n            <!--表单 start -->\n            <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" class=\"login-form\" size=\"medium\">\n                \n                <el-form-item prop=\"username\" class=\"item-form\">\n                    <label>邮箱</label>\n                    <el-input type=\"text\" v-model=\"ruleForm.username\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n\n                <el-form-item prop=\"password\" class=\"item-form\">\n                    <label>密码</label>\n                    <el-input type=\"password\" v-model=\"ruleForm.password\" autocomplete=\"off\" minlength=\"6\" maxlength=\"20\"></el-input>\n                </el-form-item>\n\n                <el-form-item prop=\"passwords\" class=\"item-form\" v-show=\"model === 'register'\">\n                    <label>重复密码</label>\n                    <el-input type=\"password\" v-model=\"ruleForm.passwords\" autocomplete=\"off\" minlength=\"6\" maxlength=\"20\"></el-input>\n                </el-form-item>\n\n                <el-form-item prop=\"code\" class=\"item-form\">\n                    <label>验证码</label>\n                    <el-row :gutter=\"11\">\n                        <el-col :span=\"15\">\n                            <el-input v-model.number=\"ruleForm.code\" minlength=\"6\" maxlength=\"6\"></el-input>\n                        </el-col>\n                        <el-col :span=\"9\">\n                            <el-button type=\"success\" class=\"block\" @click=\"getSms()\" :disabled=\"codeButtonStatus.status\">{{ codeButtonStatus.text }}</el-button>\n                        </el-col>\n                    </el-row>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"danger\" @click=\"submitForm('ruleForm')\" class=\"block login-btn\" :disabled=\"loginButtonStatus\">{{ model === 'login' ? \"登录\" : \"注册\" }}</el-button>\n                </el-form-item>\n            </el-form>\n        </div>\n    </div>\n</template>\n<script>\nimport sha1 from 'js-sha1';\nimport { Message } from 'element-ui';\nimport { GetSms,Register,Login } from '@/api/login.js';\nimport { reactive,ref,isRef,toRefs,onMounted,watch,onUnmounted } from '@vue/composition-api';\nimport { stripscript,validateEmail,validatePass,validateCode } from '@/utils/validate.js';\nexport default {\n    name: 'login',\n    setup(props,{ refs , root }){\n        //验证用户名\n        let validateUsername = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入用户名'));\n            } else if(validateEmail(value)){\n                callback(new Error('用户名格式有误'));\n            } else {\n                callback(); //true\n            }\n        };\n        //验证密码\n        let validatePassword = (rule, value, callback) => {\n            //过滤后的数据\n            ruleForm.password = stripscript(value);\n            value = ruleForm.password;\n            if (value === '') {\n                callback(new Error('请输入密码'));\n            } else if (validatePass(value)) {\n                callback(new Error('密码为6至20位的数字+字母'));\n            } else {\n                callback();\n            }\n        };\n        //验证重复密码\n        let validatePasswords = (rule, value, callback) => {\n            //如果模块值为login，直接通过，无需验证重复密码。\n            if(model.value === 'login'){\n                callback();\n            }\n            //过滤后的数据\n            ruleForm.passwords = stripscript(value);\n            value = ruleForm.passwords;\n            if (value === '') {\n                callback(new Error('请再次输入密码'));\n            } else if (value != ruleForm.password) {\n                callback(new Error('重复密码不正确'));\n            } else {\n                callback();\n            }\n        };\n        //验证验证码\n        let checkCode = (rule, value, callback) => {\n            if (value === '') {\n                return callback(new Error('请输入验证码'));\n            } else if (validateCode(value)){\n                return callback(new Error('验证码格式有误'));\n            } else {\n                callback();\n            }\n        };\n        /********************************************************************** */\n        /**\n         * 声明数据\n         */\n        //这里面放置data数据、生命周期、自定义函数\n        const menuTab = reactive([\n            { txt: '登录', current: true,type: 'login' },\n            { txt: '注册', current: false,type: 'register' }\n        ]);\n        //模块值\n        const model = ref('login');\n        //登录按钮禁用状态\n        const loginButtonStatus = ref(true);\n        //验证码按钮状态\n        const codeButtonStatus = reactive({\n            status: false,\n            text: '获取验证码'\n        });\n        //倒计时\n        const timer = ref(null);\n        //表单绑定数据\n        const ruleForm = reactive ({\n            username: '2412526271@qq.com',\n            passeord: 'wode123456',\n            passwords: 'wode123456',\n            code: ''\n        });\n        //表单验证\n        const rules = reactive ({\n          username: [\n            { validator: validateUsername, trigger: 'blur' }\n          ],\n          password: [\n            { validator: validatePassword, trigger: 'blur' }\n          ],\n          passwords: [\n            { validator: validatePasswords, trigger: 'blur' }\n          ],\n          code: [\n            { validator: checkCode, trigger: 'blur' }\n          ]\n        });\n        /**\n         * 声明函数\n         */\n        //切换模块\n        const toggleMenu = (data => {\n            menuTab.forEach((elem,index) => {\n                elem.current = false;\n            });\n            //高光\n            data.current = true;\n            //修改模块值\n            model.value = data.type;\n            resetFormData();\n            clearCountDown();\n        });\n        //清除表单数据\n        const resetFormData = (() => {\n            //重置表单\n            refs.loginForm.resetFields();\n        });\n        //更新按钮状态\n        const updataButtonStatus = (() => {\n            codeButtonStatus.status = params.status;\n            codeButtonStatus.text = params.text;\n        });\n\n        /**\n         * 获取验证码\n         */\n        const getSms = (() => {\n            //进行提示\n            if(ruleForm.username == ''){\n                root.$message.error('邮箱不能为空！！！');\n                return false;\n            }\n            if(validateEmail(ruleForm.username)){\n                root.$message.error('邮箱格式有误，请重新输入！！！');\n                return false;\n            }\n        });\n        //获取验证码\n        let requestData = {\n            username: ruleForm.username,\n            module: model.value\n        }\n        //修改获取验证按钮状态\n        updataButtonStatus({\n            status: true,\n            text: '发送中'\n        });\n        //延时多长时间\n        GetSms(requestData).then(response => {\n            let data = response.data;\n            root.$message({\n                message: data.message,\n                type: 'success',\n                dangerouslyUseHTMLString:true\n            });\n            //启用登录或注册按钮\n            loginButtonStatus.value = false;\n            //调定时器，倒计时\n            countDown(60);\n        }).catch(error => {\n            //启用登录或注册按钮\n            loginButtonStatus.value = false;\n            updataButtonStatus({\n                status: false,\n                text: '再次获取'\n            })\n            console.log(error);\n        });\n        \n        /**\n        * 提交表单\n        */\n\n       const submitForm = (formName => {\n           res[formName].validate((valid) => {\n               //表单验证通过\n               if(valid) {\n                   //三元运算\n                   model.value === 'login' ? login() : register();\n               } else {\n                   console.log('error submit');\n                   return false;\n               }\n           })\n       });\n       /**\n        * 登录\n        */\n       const login = (() => {\n           let repuestData = {\n               username: ruleForm.username,\n               passeord: sha1(ruleForm.passeord),\n               code: ruleForm.code\n           }\n           Login(repuestData).then(response => {\n               console.log('登录成功');\n               console.log(response);\n           }).catch(error => {\n\n           })\n       });\n       /**\n        * 注册\n        */\n       const register = (() => {\n           let requestData = {\n               username: ruleForm.username,\n               password: sha1(ruleForm.passeord),\n               code: ruleForm.code,\n               module: 'register'\n           }\n           //注册接口\n           Register(requestData).then(response => {\n               let data = response.data;\n               root.$message({\n                   message: data.message,\n                   type: 'success'\n               })\n               //模拟注册成功\n               toggleMenu(menuTab[0]);\n               clearCountDown();\n           }).catch(error => {\n               //失败执行代码\n\n           })\n       })\n        // const submitForm = (formName => {\n        //     axios.request({\n        //         method: 'post',\n        //         url: '/user/12345',\n        //         data: {\n        //             firstName: 'Fred',\n        //             lastName: 'Flintstone'\n        //         }\n        //     })\n        //     .then(function (response) {\n        //         console.log(response);\n        //     })\n        //     .catch(function (error) {\n        //         console.log(error);\n        //     });\n\n        //     refs[formName].validate((valid) => {\n        //         if (valid) {\n        //             alert('submit!');\n        //         } else {\n        //             console.log('error submit!!');\n        //             return false;\n        //         }\n        //     })\n        // })\n\n        /**\n         * 倒计时\n         */\n        const countDown = ((number) => {\n            //setTimeout 只执行一次\n            //setInterval 不断地执行，需要条件才会停止\n            let time = number;\n            timer.value = setInterval(() => {\n                time--;\n                console.log(time);\n            },1000)\n        });\n        /**\n         * 生命周期\n         */\n        //挂在完成后\n        onMounted (() => {\n            GetSms();\n\n        })\n        return {\n            menuTab,\n            model,\n            loginButtonStatus,\n            codeButtonStatus,\n            toggleMenu,\n            submitForm,\n            ruleForm,\n            rules,\n            getSms,\n            timer\n        }\n    }\n}\n</script>\n<style>\n.login-wrap .login-form .block {\n    display: block;\n    width: 100%;\n}\n\n</style>\n<style lang=\"scss\" scoped>\n#login{\n    height: 100vh;\n    background-color: #344a5f;\n}\n.login-wrap {\n    width: 330px;\n    margin: auto;\n}\n.menu-tab {\n    text-align: center;\n    li {\n        display: inline-block;\n        width: 88px;\n        line-height: 36px;\n        font-size: 14px;\n        color: #fff;\n        border-radius: 2px;\n        cursor: pointer;\n    }\n    .current {\n        background-color: rgba(0,0,0,.1);\n    }\n    .login-form {\n        margin-top: 29px;\n        label {\n            display: block;\n            margin-bottom: 3px;\n            font-size: 14px;\n            color: #fff;\n        }\n        .item-form {\n            margin-bottom: 13px;\n        }\n        .login-btn {\n          margin-top: 19px;\n        }\n    }\n}\n</style>"],"sourceRoot":"src/views/Login"}]}